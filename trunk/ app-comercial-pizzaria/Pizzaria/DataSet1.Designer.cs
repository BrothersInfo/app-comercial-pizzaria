//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pizzaria {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
    [Serializable()]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : Devart.Data.PostgreSql.PgSqlDataSet {
        
        private ambienteDataTable tableambiente;
        
        private caixaDataTable tablecaixa;
        
        private comandaDataTable tablecomanda;
        
        private garconDataTable tablegarcon;
        
        private garconcompletoDataTable tablegarconcompleto;
        
        private ingredienteDataTable tableingrediente;
        
        private mesaDataTable tablemesa;
        
        private pagamentoDataTable tablepagamento;
        
        private produtoDataTable tableproduto;
        
        private produtoingredienteDataTable tableprodutoingrediente;
        
        private produtotamanhoDataTable tableprodutotamanho;
        
        private superDataTable tablesuper;
        
        private supervendaDataTable tablesupervenda;
        
        private tamanhoDataTable tabletamanho;
        
        private tipoDataTable tabletipo;
        
        private vendaDataTable tablevenda;
        
        private vendacompletaDataTable tablevendacompleta;
        
        private vendagarconDataTable tablevendagarcon;
        
        private vendamesaDataTable tablevendamesa;
        
        private System.Data.DataRelation relationfkvenda3;
        
        private System.Data.DataRelation relationfkmesa;
        
        private System.Data.DataRelation relationfkvenda2;
        
        private System.Data.DataRelation relationfkvenda1;
        
        private System.Data.DataRelation relationfkpagamento;
        
        private System.Data.DataRelation relationfkcaixa;
        
        private System.Data.DataRelation relationfkvenda;
        
        private System.Data.DataRelation relationfksuper;
        
        private System.Data.DataRelation relationfktamanho;
        
        private System.Data.DataRelation relationfkproduto1;
        
        private System.Data.DataRelation relationfkproduto;
        
        private System.Data.DataRelation relationfkingrediente;
        
        private System.Data.DataRelation relationfkcodtipo;
        
        private System.Data.DataRelation relationfkambiente;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                Devart.Data.PostgreSql.PgSqlDataSet ds = new Devart.Data.PostgreSql.PgSqlDataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["ambiente"] != null)) {
                    base.Tables.Add(new ambienteDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["ambiente"]))));
                }
                if ((ds.Tables["caixa"] != null)) {
                    base.Tables.Add(new caixaDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["caixa"]))));
                }
                if ((ds.Tables["comanda"] != null)) {
                    base.Tables.Add(new comandaDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["comanda"]))));
                }
                if ((ds.Tables["garcon"] != null)) {
                    base.Tables.Add(new garconDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["garcon"]))));
                }
                if ((ds.Tables["garconcompleto"] != null)) {
                    base.Tables.Add(new garconcompletoDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["garconcompleto"]))));
                }
                if ((ds.Tables["ingrediente"] != null)) {
                    base.Tables.Add(new ingredienteDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["ingrediente"]))));
                }
                if ((ds.Tables["mesa"] != null)) {
                    base.Tables.Add(new mesaDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["mesa"]))));
                }
                if ((ds.Tables["pagamento"] != null)) {
                    base.Tables.Add(new pagamentoDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["pagamento"]))));
                }
                if ((ds.Tables["produto"] != null)) {
                    base.Tables.Add(new produtoDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["produto"]))));
                }
                if ((ds.Tables["produtoingrediente"] != null)) {
                    base.Tables.Add(new produtoingredienteDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["produtoingrediente"]))));
                }
                if ((ds.Tables["produtotamanho"] != null)) {
                    base.Tables.Add(new produtotamanhoDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["produtotamanho"]))));
                }
                if ((ds.Tables["super"] != null)) {
                    base.Tables.Add(new superDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["super"]))));
                }
                if ((ds.Tables["supervenda"] != null)) {
                    base.Tables.Add(new supervendaDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["supervenda"]))));
                }
                if ((ds.Tables["tamanho"] != null)) {
                    base.Tables.Add(new tamanhoDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["tamanho"]))));
                }
                if ((ds.Tables["tipo"] != null)) {
                    base.Tables.Add(new tipoDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["tipo"]))));
                }
                if ((ds.Tables["venda"] != null)) {
                    base.Tables.Add(new vendaDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["venda"]))));
                }
                if ((ds.Tables["vendacompleta"] != null)) {
                    base.Tables.Add(new vendacompletaDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["vendacompleta"]))));
                }
                if ((ds.Tables["vendagarcon"] != null)) {
                    base.Tables.Add(new vendagarconDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["vendagarcon"]))));
                }
                if ((ds.Tables["vendamesa"] != null)) {
                    base.Tables.Add(new vendamesaDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["vendamesa"]))));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(System.Data.SchemaSerializationMode.IncludeSchema)]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ambienteDataTable ambiente {
            get {
                return this.tableambiente;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public caixaDataTable caixa {
            get {
                return this.tablecaixa;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public comandaDataTable comanda {
            get {
                return this.tablecomanda;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public garconDataTable garcon {
            get {
                return this.tablegarcon;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public garconcompletoDataTable garconcompleto {
            get {
                return this.tablegarconcompleto;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ingredienteDataTable ingrediente {
            get {
                return this.tableingrediente;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public mesaDataTable mesa {
            get {
                return this.tablemesa;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public pagamentoDataTable pagamento {
            get {
                return this.tablepagamento;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public produtoDataTable produto {
            get {
                return this.tableproduto;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public produtoingredienteDataTable produtoingrediente {
            get {
                return this.tableprodutoingrediente;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public produtotamanhoDataTable produtotamanho {
            get {
                return this.tableprodutotamanho;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public superDataTable super {
            get {
                return this.tablesuper;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public supervendaDataTable supervenda {
            get {
                return this.tablesupervenda;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tamanhoDataTable tamanho {
            get {
                return this.tabletamanho;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tipoDataTable tipo {
            get {
                return this.tabletipo;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vendaDataTable venda {
            get {
                return this.tablevenda;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vendacompletaDataTable vendacompleta {
            get {
                return this.tablevendacompleta;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vendagarconDataTable vendagarcon {
            get {
                return this.tablevendagarcon;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.CategoryAttribute("Tables")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vendamesaDataTable vendamesa {
            get {
                return this.tablevendamesa;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public new Devart.Data.PostgreSql.PgSqlConnection Connection {
            get {
                return base.Connection;
            }
            set {
                base.Connection = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public new string Prefix {
            get {
                return base.Prefix;
            }
            set {
                base.Prefix = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                Devart.Data.PostgreSql.PgSqlDataSet ds = new Devart.Data.PostgreSql.PgSqlDataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ambiente"] != null)) {
                    base.Tables.Add(new ambienteDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["ambiente"]))));
                }
                if ((ds.Tables["caixa"] != null)) {
                    base.Tables.Add(new caixaDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["caixa"]))));
                }
                if ((ds.Tables["comanda"] != null)) {
                    base.Tables.Add(new comandaDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["comanda"]))));
                }
                if ((ds.Tables["garcon"] != null)) {
                    base.Tables.Add(new garconDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["garcon"]))));
                }
                if ((ds.Tables["garconcompleto"] != null)) {
                    base.Tables.Add(new garconcompletoDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["garconcompleto"]))));
                }
                if ((ds.Tables["ingrediente"] != null)) {
                    base.Tables.Add(new ingredienteDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["ingrediente"]))));
                }
                if ((ds.Tables["mesa"] != null)) {
                    base.Tables.Add(new mesaDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["mesa"]))));
                }
                if ((ds.Tables["pagamento"] != null)) {
                    base.Tables.Add(new pagamentoDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["pagamento"]))));
                }
                if ((ds.Tables["produto"] != null)) {
                    base.Tables.Add(new produtoDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["produto"]))));
                }
                if ((ds.Tables["produtoingrediente"] != null)) {
                    base.Tables.Add(new produtoingredienteDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["produtoingrediente"]))));
                }
                if ((ds.Tables["produtotamanho"] != null)) {
                    base.Tables.Add(new produtotamanhoDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["produtotamanho"]))));
                }
                if ((ds.Tables["super"] != null)) {
                    base.Tables.Add(new superDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["super"]))));
                }
                if ((ds.Tables["supervenda"] != null)) {
                    base.Tables.Add(new supervendaDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["supervenda"]))));
                }
                if ((ds.Tables["tamanho"] != null)) {
                    base.Tables.Add(new tamanhoDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["tamanho"]))));
                }
                if ((ds.Tables["tipo"] != null)) {
                    base.Tables.Add(new tipoDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["tipo"]))));
                }
                if ((ds.Tables["venda"] != null)) {
                    base.Tables.Add(new vendaDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["venda"]))));
                }
                if ((ds.Tables["vendacompleta"] != null)) {
                    base.Tables.Add(new vendacompletaDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["vendacompleta"]))));
                }
                if ((ds.Tables["vendagarcon"] != null)) {
                    base.Tables.Add(new vendagarconDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["vendagarcon"]))));
                }
                if ((ds.Tables["vendamesa"] != null)) {
                    base.Tables.Add(new vendamesaDataTable(((Devart.Data.PostgreSql.PgSqlDataTable)(ds.Tables["vendamesa"]))));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableambiente = ((ambienteDataTable)(base.Tables["ambiente"]));
            if ((initTable == true)) {
                if ((this.tableambiente != null)) {
                    this.tableambiente.InitVars();
                }
            }
            this.tablecaixa = ((caixaDataTable)(base.Tables["caixa"]));
            if ((initTable == true)) {
                if ((this.tablecaixa != null)) {
                    this.tablecaixa.InitVars();
                }
            }
            this.tablecomanda = ((comandaDataTable)(base.Tables["comanda"]));
            if ((initTable == true)) {
                if ((this.tablecomanda != null)) {
                    this.tablecomanda.InitVars();
                }
            }
            this.tablegarcon = ((garconDataTable)(base.Tables["garcon"]));
            if ((initTable == true)) {
                if ((this.tablegarcon != null)) {
                    this.tablegarcon.InitVars();
                }
            }
            this.tablegarconcompleto = ((garconcompletoDataTable)(base.Tables["garconcompleto"]));
            if ((initTable == true)) {
                if ((this.tablegarconcompleto != null)) {
                    this.tablegarconcompleto.InitVars();
                }
            }
            this.tableingrediente = ((ingredienteDataTable)(base.Tables["ingrediente"]));
            if ((initTable == true)) {
                if ((this.tableingrediente != null)) {
                    this.tableingrediente.InitVars();
                }
            }
            this.tablemesa = ((mesaDataTable)(base.Tables["mesa"]));
            if ((initTable == true)) {
                if ((this.tablemesa != null)) {
                    this.tablemesa.InitVars();
                }
            }
            this.tablepagamento = ((pagamentoDataTable)(base.Tables["pagamento"]));
            if ((initTable == true)) {
                if ((this.tablepagamento != null)) {
                    this.tablepagamento.InitVars();
                }
            }
            this.tableproduto = ((produtoDataTable)(base.Tables["produto"]));
            if ((initTable == true)) {
                if ((this.tableproduto != null)) {
                    this.tableproduto.InitVars();
                }
            }
            this.tableprodutoingrediente = ((produtoingredienteDataTable)(base.Tables["produtoingrediente"]));
            if ((initTable == true)) {
                if ((this.tableprodutoingrediente != null)) {
                    this.tableprodutoingrediente.InitVars();
                }
            }
            this.tableprodutotamanho = ((produtotamanhoDataTable)(base.Tables["produtotamanho"]));
            if ((initTable == true)) {
                if ((this.tableprodutotamanho != null)) {
                    this.tableprodutotamanho.InitVars();
                }
            }
            this.tablesuper = ((superDataTable)(base.Tables["super"]));
            if ((initTable == true)) {
                if ((this.tablesuper != null)) {
                    this.tablesuper.InitVars();
                }
            }
            this.tablesupervenda = ((supervendaDataTable)(base.Tables["supervenda"]));
            if ((initTable == true)) {
                if ((this.tablesupervenda != null)) {
                    this.tablesupervenda.InitVars();
                }
            }
            this.tabletamanho = ((tamanhoDataTable)(base.Tables["tamanho"]));
            if ((initTable == true)) {
                if ((this.tabletamanho != null)) {
                    this.tabletamanho.InitVars();
                }
            }
            this.tabletipo = ((tipoDataTable)(base.Tables["tipo"]));
            if ((initTable == true)) {
                if ((this.tabletipo != null)) {
                    this.tabletipo.InitVars();
                }
            }
            this.tablevenda = ((vendaDataTable)(base.Tables["venda"]));
            if ((initTable == true)) {
                if ((this.tablevenda != null)) {
                    this.tablevenda.InitVars();
                }
            }
            this.tablevendacompleta = ((vendacompletaDataTable)(base.Tables["vendacompleta"]));
            if ((initTable == true)) {
                if ((this.tablevendacompleta != null)) {
                    this.tablevendacompleta.InitVars();
                }
            }
            this.tablevendagarcon = ((vendagarconDataTable)(base.Tables["vendagarcon"]));
            if ((initTable == true)) {
                if ((this.tablevendagarcon != null)) {
                    this.tablevendagarcon.InitVars();
                }
            }
            this.tablevendamesa = ((vendamesaDataTable)(base.Tables["vendamesa"]));
            if ((initTable == true)) {
                if ((this.tablevendamesa != null)) {
                    this.tablevendamesa.InitVars();
                }
            }
            this.relationfkvenda3 = this.Relations["fkvenda3"];
            this.relationfkmesa = this.Relations["fkmesa"];
            this.relationfkvenda2 = this.Relations["fkvenda2"];
            this.relationfkvenda1 = this.Relations["fkvenda1"];
            this.relationfkpagamento = this.Relations["fkpagamento"];
            this.relationfkcaixa = this.Relations["fkcaixa"];
            this.relationfkvenda = this.Relations["fkvenda"];
            this.relationfksuper = this.Relations["fksuper"];
            this.relationfktamanho = this.Relations["fktamanho"];
            this.relationfkproduto1 = this.Relations["fkproduto1"];
            this.relationfkproduto = this.Relations["fkproduto"];
            this.relationfkingrediente = this.Relations["fkingrediente"];
            this.relationfkcodtipo = this.Relations["fkcodtipo"];
            this.relationfkambiente = this.Relations["fkambiente"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
            this.tableambiente = new ambienteDataTable(this.Connection);
            base.Tables.Add(this.tableambiente);
            this.tablecaixa = new caixaDataTable(this.Connection);
            base.Tables.Add(this.tablecaixa);
            this.tablecomanda = new comandaDataTable(this.Connection);
            base.Tables.Add(this.tablecomanda);
            this.tablegarcon = new garconDataTable(this.Connection);
            base.Tables.Add(this.tablegarcon);
            this.tablegarconcompleto = new garconcompletoDataTable(this.Connection);
            base.Tables.Add(this.tablegarconcompleto);
            this.tableingrediente = new ingredienteDataTable(this.Connection);
            base.Tables.Add(this.tableingrediente);
            this.tablemesa = new mesaDataTable(this.Connection);
            base.Tables.Add(this.tablemesa);
            this.tablepagamento = new pagamentoDataTable(this.Connection);
            base.Tables.Add(this.tablepagamento);
            this.tableproduto = new produtoDataTable(this.Connection);
            base.Tables.Add(this.tableproduto);
            this.tableprodutoingrediente = new produtoingredienteDataTable(this.Connection);
            base.Tables.Add(this.tableprodutoingrediente);
            this.tableprodutotamanho = new produtotamanhoDataTable(this.Connection);
            base.Tables.Add(this.tableprodutotamanho);
            this.tablesuper = new superDataTable(this.Connection);
            base.Tables.Add(this.tablesuper);
            this.tablesupervenda = new supervendaDataTable(this.Connection);
            base.Tables.Add(this.tablesupervenda);
            this.tabletamanho = new tamanhoDataTable(this.Connection);
            base.Tables.Add(this.tabletamanho);
            this.tabletipo = new tipoDataTable(this.Connection);
            base.Tables.Add(this.tabletipo);
            this.tablevenda = new vendaDataTable(this.Connection);
            base.Tables.Add(this.tablevenda);
            this.tablevendacompleta = new vendacompletaDataTable(this.Connection);
            base.Tables.Add(this.tablevendacompleta);
            this.tablevendagarcon = new vendagarconDataTable(this.Connection);
            base.Tables.Add(this.tablevendagarcon);
            this.tablevendamesa = new vendamesaDataTable(this.Connection);
            base.Tables.Add(this.tablevendamesa);
            System.Data.ForeignKeyConstraint fkc;
            fkc = new System.Data.ForeignKeyConstraint("fkambiente", new System.Data.DataColumn[] {
                        this.tableambiente.cod_ambienteColumn}, new System.Data.DataColumn[] {
                        this.tablemesa.cod_ambienteColumn});
            this.tablemesa.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.None;
            fkc.UpdateRule = System.Data.Rule.None;
            fkc = new System.Data.ForeignKeyConstraint("fkcodtipo", new System.Data.DataColumn[] {
                        this.tabletipo.cod_tipoColumn}, new System.Data.DataColumn[] {
                        this.tableproduto.cod_tipoColumn});
            this.tableproduto.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.None;
            fkc.UpdateRule = System.Data.Rule.None;
            fkc = new System.Data.ForeignKeyConstraint("fkproduto", new System.Data.DataColumn[] {
                        this.tableproduto.cod_produtoColumn}, new System.Data.DataColumn[] {
                        this.tableprodutoingrediente.cod_produtoColumn});
            this.tableprodutoingrediente.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.None;
            fkc.UpdateRule = System.Data.Rule.None;
            fkc = new System.Data.ForeignKeyConstraint("fkingrediente", new System.Data.DataColumn[] {
                        this.tableingrediente.cod_ingredienteColumn}, new System.Data.DataColumn[] {
                        this.tableprodutoingrediente.cod_ingredienteColumn});
            this.tableprodutoingrediente.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.None;
            fkc.UpdateRule = System.Data.Rule.None;
            fkc = new System.Data.ForeignKeyConstraint("fktamanho", new System.Data.DataColumn[] {
                        this.tabletamanho.cod_tamanhoColumn}, new System.Data.DataColumn[] {
                        this.tableprodutotamanho.cod_tamanhoColumn});
            this.tableprodutotamanho.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.None;
            fkc.UpdateRule = System.Data.Rule.None;
            fkc = new System.Data.ForeignKeyConstraint("fkproduto1", new System.Data.DataColumn[] {
                        this.tableproduto.cod_produtoColumn}, new System.Data.DataColumn[] {
                        this.tableprodutotamanho.cod_produtoColumn});
            this.tableprodutotamanho.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.None;
            fkc.UpdateRule = System.Data.Rule.None;
            fkc = new System.Data.ForeignKeyConstraint("fkvenda", new System.Data.DataColumn[] {
                        this.tablevenda.cod_vendaColumn}, new System.Data.DataColumn[] {
                        this.tablesupervenda.cod_vendaColumn});
            this.tablesupervenda.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.None;
            fkc.UpdateRule = System.Data.Rule.None;
            fkc = new System.Data.ForeignKeyConstraint("fksuper", new System.Data.DataColumn[] {
                        this.tablesuper.cod_superColumn}, new System.Data.DataColumn[] {
                        this.tablesupervenda.cod_superColumn});
            this.tablesupervenda.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.None;
            fkc.UpdateRule = System.Data.Rule.None;
            fkc = new System.Data.ForeignKeyConstraint("fkpagamento", new System.Data.DataColumn[] {
                        this.tablepagamento.cod_pagamentoColumn}, new System.Data.DataColumn[] {
                        this.tablevenda.cod_pagamentoColumn});
            this.tablevenda.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.None;
            fkc.UpdateRule = System.Data.Rule.None;
            fkc = new System.Data.ForeignKeyConstraint("fkcaixa", new System.Data.DataColumn[] {
                        this.tablecaixa.cod_caixaColumn}, new System.Data.DataColumn[] {
                        this.tablevenda.cod_caixaColumn});
            this.tablevenda.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.None;
            fkc.UpdateRule = System.Data.Rule.None;
            fkc = new System.Data.ForeignKeyConstraint("fkvenda1", new System.Data.DataColumn[] {
                        this.tablevenda.cod_vendaColumn}, new System.Data.DataColumn[] {
                        this.tablevendacompleta.cod_vendaColumn});
            this.tablevendacompleta.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.None;
            fkc.UpdateRule = System.Data.Rule.None;
            fkc = new System.Data.ForeignKeyConstraint("fkvenda2", new System.Data.DataColumn[] {
                        this.tablevenda.cod_vendaColumn}, new System.Data.DataColumn[] {
                        this.tablevendagarcon.cod_vendaColumn});
            this.tablevendagarcon.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.None;
            fkc.UpdateRule = System.Data.Rule.None;
            fkc = new System.Data.ForeignKeyConstraint("fkvenda3", new System.Data.DataColumn[] {
                        this.tablevenda.cod_vendaColumn}, new System.Data.DataColumn[] {
                        this.tablevendamesa.cod_vendaColumn});
            this.tablevendamesa.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.None;
            fkc.UpdateRule = System.Data.Rule.None;
            fkc = new System.Data.ForeignKeyConstraint("fkmesa", new System.Data.DataColumn[] {
                        this.tablemesa.cod_mesaColumn}, new System.Data.DataColumn[] {
                        this.tablevendamesa.cod_mesaColumn});
            this.tablevendamesa.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.None;
            fkc.UpdateRule = System.Data.Rule.None;
            this.relationfkvenda3 = new System.Data.DataRelation("fkvenda3", new System.Data.DataColumn[] {
                        this.tablevenda.cod_vendaColumn}, new System.Data.DataColumn[] {
                        this.tablevendamesa.cod_vendaColumn}, false);
            this.Relations.Add(this.relationfkvenda3);
            this.relationfkmesa = new System.Data.DataRelation("fkmesa", new System.Data.DataColumn[] {
                        this.tablemesa.cod_mesaColumn}, new System.Data.DataColumn[] {
                        this.tablevendamesa.cod_mesaColumn}, false);
            this.Relations.Add(this.relationfkmesa);
            this.relationfkvenda2 = new System.Data.DataRelation("fkvenda2", new System.Data.DataColumn[] {
                        this.tablevenda.cod_vendaColumn}, new System.Data.DataColumn[] {
                        this.tablevendagarcon.cod_vendaColumn}, false);
            this.Relations.Add(this.relationfkvenda2);
            this.relationfkvenda1 = new System.Data.DataRelation("fkvenda1", new System.Data.DataColumn[] {
                        this.tablevenda.cod_vendaColumn}, new System.Data.DataColumn[] {
                        this.tablevendacompleta.cod_vendaColumn}, false);
            this.Relations.Add(this.relationfkvenda1);
            this.relationfkpagamento = new System.Data.DataRelation("fkpagamento", new System.Data.DataColumn[] {
                        this.tablepagamento.cod_pagamentoColumn}, new System.Data.DataColumn[] {
                        this.tablevenda.cod_pagamentoColumn}, false);
            this.Relations.Add(this.relationfkpagamento);
            this.relationfkcaixa = new System.Data.DataRelation("fkcaixa", new System.Data.DataColumn[] {
                        this.tablecaixa.cod_caixaColumn}, new System.Data.DataColumn[] {
                        this.tablevenda.cod_caixaColumn}, false);
            this.Relations.Add(this.relationfkcaixa);
            this.relationfkvenda = new System.Data.DataRelation("fkvenda", new System.Data.DataColumn[] {
                        this.tablevenda.cod_vendaColumn}, new System.Data.DataColumn[] {
                        this.tablesupervenda.cod_vendaColumn}, false);
            this.Relations.Add(this.relationfkvenda);
            this.relationfksuper = new System.Data.DataRelation("fksuper", new System.Data.DataColumn[] {
                        this.tablesuper.cod_superColumn}, new System.Data.DataColumn[] {
                        this.tablesupervenda.cod_superColumn}, false);
            this.Relations.Add(this.relationfksuper);
            this.relationfktamanho = new System.Data.DataRelation("fktamanho", new System.Data.DataColumn[] {
                        this.tabletamanho.cod_tamanhoColumn}, new System.Data.DataColumn[] {
                        this.tableprodutotamanho.cod_tamanhoColumn}, false);
            this.Relations.Add(this.relationfktamanho);
            this.relationfkproduto1 = new System.Data.DataRelation("fkproduto1", new System.Data.DataColumn[] {
                        this.tableproduto.cod_produtoColumn}, new System.Data.DataColumn[] {
                        this.tableprodutotamanho.cod_produtoColumn}, false);
            this.Relations.Add(this.relationfkproduto1);
            this.relationfkproduto = new System.Data.DataRelation("fkproduto", new System.Data.DataColumn[] {
                        this.tableproduto.cod_produtoColumn}, new System.Data.DataColumn[] {
                        this.tableprodutoingrediente.cod_produtoColumn}, false);
            this.Relations.Add(this.relationfkproduto);
            this.relationfkingrediente = new System.Data.DataRelation("fkingrediente", new System.Data.DataColumn[] {
                        this.tableingrediente.cod_ingredienteColumn}, new System.Data.DataColumn[] {
                        this.tableprodutoingrediente.cod_ingredienteColumn}, false);
            this.Relations.Add(this.relationfkingrediente);
            this.relationfkcodtipo = new System.Data.DataRelation("fkcodtipo", new System.Data.DataColumn[] {
                        this.tabletipo.cod_tipoColumn}, new System.Data.DataColumn[] {
                        this.tableproduto.cod_tipoColumn}, false);
            this.Relations.Add(this.relationfkcodtipo);
            this.relationfkambiente = new System.Data.DataRelation("fkambiente", new System.Data.DataColumn[] {
                        this.tableambiente.cod_ambienteColumn}, new System.Data.DataColumn[] {
                        this.tablemesa.cod_ambienteColumn}, false);
            this.Relations.Add(this.relationfkambiente);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeConnection() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePrefix() {
            return false;
        }
        
        public delegate void ambienteRowChangeEventHandler(object sender, ambienteRowChangeEvent e);
        
        public delegate void caixaRowChangeEventHandler(object sender, caixaRowChangeEvent e);
        
        public delegate void comandaRowChangeEventHandler(object sender, comandaRowChangeEvent e);
        
        public delegate void garconRowChangeEventHandler(object sender, garconRowChangeEvent e);
        
        public delegate void garconcompletoRowChangeEventHandler(object sender, garconcompletoRowChangeEvent e);
        
        public delegate void ingredienteRowChangeEventHandler(object sender, ingredienteRowChangeEvent e);
        
        public delegate void mesaRowChangeEventHandler(object sender, mesaRowChangeEvent e);
        
        public delegate void pagamentoRowChangeEventHandler(object sender, pagamentoRowChangeEvent e);
        
        public delegate void produtoRowChangeEventHandler(object sender, produtoRowChangeEvent e);
        
        public delegate void produtoingredienteRowChangeEventHandler(object sender, produtoingredienteRowChangeEvent e);
        
        public delegate void produtotamanhoRowChangeEventHandler(object sender, produtotamanhoRowChangeEvent e);
        
        public delegate void superRowChangeEventHandler(object sender, superRowChangeEvent e);
        
        public delegate void supervendaRowChangeEventHandler(object sender, supervendaRowChangeEvent e);
        
        public delegate void tamanhoRowChangeEventHandler(object sender, tamanhoRowChangeEvent e);
        
        public delegate void tipoRowChangeEventHandler(object sender, tipoRowChangeEvent e);
        
        public delegate void vendaRowChangeEventHandler(object sender, vendaRowChangeEvent e);
        
        public delegate void vendacompletaRowChangeEventHandler(object sender, vendacompletaRowChangeEvent e);
        
        public delegate void vendagarconRowChangeEventHandler(object sender, vendagarconRowChangeEvent e);
        
        public delegate void vendamesaRowChangeEventHandler(object sender, vendamesaRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ambienteDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncod_ambiente;
            
            private System.Data.DataColumn columndescricao;
            
            private System.Data.DataColumn columnativo;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ambienteDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ambienteDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "ambiente";
                this.Name = "ambiente";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ambienteDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ambienteDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_ambienteColumn {
                get {
                    return this.columncod_ambiente;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn descricaoColumn {
                get {
                    return this.columndescricao;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn ativoColumn {
                get {
                    return this.columnativo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ambienteRow this[int index] {
                get {
                    return ((ambienteRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event ambienteRowChangeEventHandler ambienteRowChanging;
            
            public event ambienteRowChangeEventHandler ambienteRowChanged;
            
            public event ambienteRowChangeEventHandler ambienteRowDeleting;
            
            public event ambienteRowChangeEventHandler ambienteRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddambienteRow(ambienteRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ambienteRow AddambienteRow(int cod_ambiente, string descricao, bool ativo) {
                ambienteRow rowambienteRow = ((ambienteRow)(this.NewRow()));
                rowambienteRow.ItemArray = new object[] {
                        cod_ambiente,
                        descricao,
                        ativo};
                this.Rows.Add(rowambienteRow);
                return rowambienteRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ambienteRow FindBycod_ambiente(int cod_ambiente) {
                return ((ambienteRow)(this.Rows.Find(new object[] {
                            cod_ambiente})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ambienteDataTable cln = ((ambienteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ambienteDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncod_ambiente = base.Columns["cod_ambiente"];
                this.columndescricao = base.Columns["descricao"];
                this.columnativo = base.Columns["ativo"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncod_ambiente = new System.Data.DataColumn("cod_ambiente", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_ambiente);
                this.columndescricao = new System.Data.DataColumn("descricao", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndescricao);
                this.columnativo = new System.Data.DataColumn("ativo", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnativo);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncod_ambiente}, true));
                this.columncod_ambiente.AllowDBNull = false;
                this.columncod_ambiente.Unique = true;
                this.columndescricao.AllowDBNull = false;
                this.columnativo.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select * from public.ambiente", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"ambiente\" (\"cod_ambiente\", \"descricao\", \"ativo\") VALUES (:c" +
                        "od_ambiente, :descricao, :ativo)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_ambiente";
                param.Size = 0;
                param.SourceColumn = "cod_ambiente";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand("UPDATE \"public\".\"ambiente\" SET \"cod_ambiente\" = :cod_ambiente, \"descricao\" = :des" +
                        "cricao, \"ativo\" = :ativo WHERE ((\"cod_ambiente\" = :Original_cod_ambiente) AND (\"" +
                        "descricao\" = :Original_descricao) AND (\"ativo\" = :Original_ativo))", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_ambiente";
                param.Size = 0;
                param.SourceColumn = "cod_ambiente";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_ambiente";
                param.Size = 0;
                param.SourceColumn = "cod_ambiente";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand("DELETE FROM \"public\".\"ambiente\" WHERE ((\"cod_ambiente\" = :Original_cod_ambiente) " +
                        "AND (\"descricao\" = :Original_descricao) AND (\"ativo\" = :Original_ativo))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_ambiente";
                param.Size = 0;
                param.SourceColumn = "cod_ambiente";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "ambiente";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("cod_ambiente", "cod_ambiente");
                this.TableMapping.ColumnMappings.Add("descricao", "descricao");
                this.TableMapping.ColumnMappings.Add("ativo", "ativo");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ambienteRow NewambienteRow() {
                return ((ambienteRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ambienteRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ambienteRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ambienteRowChanged != null)) {
                    this.ambienteRowChanged(this, new ambienteRowChangeEvent(((ambienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ambienteRowChanging != null)) {
                    this.ambienteRowChanging(this, new ambienteRowChangeEvent(((ambienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ambienteRowDeleted != null)) {
                    this.ambienteRowDeleted(this, new ambienteRowChangeEvent(((ambienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ambienteRowDeleting != null)) {
                    this.ambienteRowDeleting(this, new ambienteRowChangeEvent(((ambienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveambienteRow(ambienteRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ambienteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class ambienteRow : System.Data.DataRow {
            
            private ambienteDataTable tableambiente;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ambienteRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableambiente = ((ambienteDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_ambiente {
                get {
                    return ((int)(this[this.tableambiente.cod_ambienteColumn]));
                }
                set {
                    this[this.tableambiente.cod_ambienteColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descricao {
                get {
                    return ((string)(this[this.tableambiente.descricaoColumn]));
                }
                set {
                    this[this.tableambiente.descricaoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ativo {
                get {
                    return ((bool)(this[this.tableambiente.ativoColumn]));
                }
                set {
                    this[this.tableambiente.ativoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mesaRow[] GetmesaRows() {
                return ((mesaRow[])(this.GetChildRows(this.Table.ChildRelations["fkambiente"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class ambienteRowChangeEvent : System.EventArgs {
            
            private ambienteRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ambienteRowChangeEvent(ambienteRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ambienteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class caixaDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncod_caixa;
            
            private System.Data.DataColumn columnnomecaixa;
            
            private System.Data.DataColumn columnnivel_acesso;
            
            private System.Data.DataColumn columnid;
            
            private System.Data.DataColumn columnsenha;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public caixaDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public caixaDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "caixa";
                this.Name = "caixa";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal caixaDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected caixaDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_caixaColumn {
                get {
                    return this.columncod_caixa;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn nomecaixaColumn {
                get {
                    return this.columnnomecaixa;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn nivel_acessoColumn {
                get {
                    return this.columnnivel_acesso;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn senhaColumn {
                get {
                    return this.columnsenha;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public caixaRow this[int index] {
                get {
                    return ((caixaRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event caixaRowChangeEventHandler caixaRowChanging;
            
            public event caixaRowChangeEventHandler caixaRowChanged;
            
            public event caixaRowChangeEventHandler caixaRowDeleting;
            
            public event caixaRowChangeEventHandler caixaRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddcaixaRow(caixaRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public caixaRow AddcaixaRow(int cod_caixa, string nomecaixa, bool nivel_acesso, string id, string senha) {
                caixaRow rowcaixaRow = ((caixaRow)(this.NewRow()));
                rowcaixaRow.ItemArray = new object[] {
                        cod_caixa,
                        nomecaixa,
                        nivel_acesso,
                        id,
                        senha};
                this.Rows.Add(rowcaixaRow);
                return rowcaixaRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public caixaRow FindBycod_caixa(int cod_caixa) {
                return ((caixaRow)(this.Rows.Find(new object[] {
                            cod_caixa})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                caixaDataTable cln = ((caixaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new caixaDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncod_caixa = base.Columns["cod_caixa"];
                this.columnnomecaixa = base.Columns["nomecaixa"];
                this.columnnivel_acesso = base.Columns["nivel_acesso"];
                this.columnid = base.Columns["id"];
                this.columnsenha = base.Columns["senha"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncod_caixa = new System.Data.DataColumn("cod_caixa", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_caixa);
                this.columnnomecaixa = new System.Data.DataColumn("nomecaixa", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnomecaixa);
                this.columnnivel_acesso = new System.Data.DataColumn("nivel_acesso", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnivel_acesso);
                this.columnid = new System.Data.DataColumn("id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnsenha = new System.Data.DataColumn("senha", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsenha);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncod_caixa}, true));
                this.columncod_caixa.AllowDBNull = false;
                this.columncod_caixa.Unique = true;
                this.columnnomecaixa.AllowDBNull = false;
                this.columnnivel_acesso.AllowDBNull = false;
                this.columnid.AllowDBNull = false;
                this.columnsenha.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select * from public.caixa", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"caixa\" (\"cod_caixa\", \"nomecaixa\", \"nivel_acesso\", \"id\", \"se" +
                        "nha\") VALUES (:cod_caixa, :nomecaixa, :nivel_acesso, :id, :senha)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_caixa";
                param.Size = 0;
                param.SourceColumn = "cod_caixa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "nomecaixa";
                param.Size = 0;
                param.SourceColumn = "nomecaixa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "nivel_acesso";
                param.Size = 0;
                param.SourceColumn = "nivel_acesso";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "id";
                param.Size = 0;
                param.SourceColumn = "id";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "senha";
                param.Size = 0;
                param.SourceColumn = "senha";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand(@"UPDATE ""public"".""caixa"" SET ""cod_caixa"" = :cod_caixa, ""nomecaixa"" = :nomecaixa, ""nivel_acesso"" = :nivel_acesso, ""id"" = :id, ""senha"" = :senha WHERE ((""cod_caixa"" = :Original_cod_caixa) AND (""nomecaixa"" = :Original_nomecaixa) AND (""nivel_acesso"" = :Original_nivel_acesso) AND (""id"" = :Original_id) AND (""senha"" = :Original_senha))", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_caixa";
                param.Size = 0;
                param.SourceColumn = "cod_caixa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "nomecaixa";
                param.Size = 0;
                param.SourceColumn = "nomecaixa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "nivel_acesso";
                param.Size = 0;
                param.SourceColumn = "nivel_acesso";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "id";
                param.Size = 0;
                param.SourceColumn = "id";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "senha";
                param.Size = 0;
                param.SourceColumn = "senha";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_caixa";
                param.Size = 0;
                param.SourceColumn = "cod_caixa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_nomecaixa";
                param.Size = 0;
                param.SourceColumn = "nomecaixa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_nivel_acesso";
                param.Size = 0;
                param.SourceColumn = "nivel_acesso";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_id";
                param.Size = 0;
                param.SourceColumn = "id";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_senha";
                param.Size = 0;
                param.SourceColumn = "senha";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand("DELETE FROM \"public\".\"caixa\" WHERE ((\"cod_caixa\" = :Original_cod_caixa) AND (\"nom" +
                        "ecaixa\" = :Original_nomecaixa) AND (\"nivel_acesso\" = :Original_nivel_acesso) AND" +
                        " (\"id\" = :Original_id) AND (\"senha\" = :Original_senha))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_caixa";
                param.Size = 0;
                param.SourceColumn = "cod_caixa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_nomecaixa";
                param.Size = 0;
                param.SourceColumn = "nomecaixa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_nivel_acesso";
                param.Size = 0;
                param.SourceColumn = "nivel_acesso";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_id";
                param.Size = 0;
                param.SourceColumn = "id";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_senha";
                param.Size = 0;
                param.SourceColumn = "senha";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "caixa";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("cod_caixa", "cod_caixa");
                this.TableMapping.ColumnMappings.Add("nomecaixa", "nomecaixa");
                this.TableMapping.ColumnMappings.Add("nivel_acesso", "nivel_acesso");
                this.TableMapping.ColumnMappings.Add("id", "id");
                this.TableMapping.ColumnMappings.Add("senha", "senha");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public caixaRow NewcaixaRow() {
                return ((caixaRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new caixaRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(caixaRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.caixaRowChanged != null)) {
                    this.caixaRowChanged(this, new caixaRowChangeEvent(((caixaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.caixaRowChanging != null)) {
                    this.caixaRowChanging(this, new caixaRowChangeEvent(((caixaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.caixaRowDeleted != null)) {
                    this.caixaRowDeleted(this, new caixaRowChangeEvent(((caixaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.caixaRowDeleting != null)) {
                    this.caixaRowDeleting(this, new caixaRowChangeEvent(((caixaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovecaixaRow(caixaRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "caixaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class caixaRow : System.Data.DataRow {
            
            private caixaDataTable tablecaixa;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal caixaRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecaixa = ((caixaDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_caixa {
                get {
                    return ((int)(this[this.tablecaixa.cod_caixaColumn]));
                }
                set {
                    this[this.tablecaixa.cod_caixaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nomecaixa {
                get {
                    return ((string)(this[this.tablecaixa.nomecaixaColumn]));
                }
                set {
                    this[this.tablecaixa.nomecaixaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool nivel_acesso {
                get {
                    return ((bool)(this[this.tablecaixa.nivel_acessoColumn]));
                }
                set {
                    this[this.tablecaixa.nivel_acessoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    return ((string)(this[this.tablecaixa.idColumn]));
                }
                set {
                    this[this.tablecaixa.idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string senha {
                get {
                    return ((string)(this[this.tablecaixa.senhaColumn]));
                }
                set {
                    this[this.tablecaixa.senhaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendaRow[] GetvendaRows() {
                return ((vendaRow[])(this.GetChildRows(this.Table.ChildRelations["fkcaixa"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class caixaRowChangeEvent : System.EventArgs {
            
            private caixaRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public caixaRowChangeEvent(caixaRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public caixaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class comandaDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnempresa;
            
            private System.Data.DataColumn columnrua;
            
            private System.Data.DataColumn columntelefone;
            
            private System.Data.DataColumn columntitulo;
            
            private System.Data.DataColumn columnmensagem;
            
            private System.Data.DataColumn columncidade;
            
            private System.Data.DataColumn columnprognome;
            
            private System.Data.DataColumn columnprogtelefone;
            
            private System.Data.DataColumn columncod_comanda;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public comandaDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public comandaDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "comanda";
                this.Name = "comanda";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal comandaDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected comandaDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn empresaColumn {
                get {
                    return this.columnempresa;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn ruaColumn {
                get {
                    return this.columnrua;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn telefoneColumn {
                get {
                    return this.columntelefone;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn tituloColumn {
                get {
                    return this.columntitulo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn mensagemColumn {
                get {
                    return this.columnmensagem;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cidadeColumn {
                get {
                    return this.columncidade;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn prognomeColumn {
                get {
                    return this.columnprognome;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn progtelefoneColumn {
                get {
                    return this.columnprogtelefone;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_comandaColumn {
                get {
                    return this.columncod_comanda;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public comandaRow this[int index] {
                get {
                    return ((comandaRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event comandaRowChangeEventHandler comandaRowChanging;
            
            public event comandaRowChangeEventHandler comandaRowChanged;
            
            public event comandaRowChangeEventHandler comandaRowDeleting;
            
            public event comandaRowChangeEventHandler comandaRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddcomandaRow(comandaRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public comandaRow AddcomandaRow(string empresa, string rua, string telefone, string titulo, string mensagem, string cidade, string prognome, string progtelefone, int cod_comanda) {
                comandaRow rowcomandaRow = ((comandaRow)(this.NewRow()));
                rowcomandaRow.ItemArray = new object[] {
                        empresa,
                        rua,
                        telefone,
                        titulo,
                        mensagem,
                        cidade,
                        prognome,
                        progtelefone,
                        cod_comanda};
                this.Rows.Add(rowcomandaRow);
                return rowcomandaRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public comandaRow FindBycod_comanda(int cod_comanda) {
                return ((comandaRow)(this.Rows.Find(new object[] {
                            cod_comanda})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                comandaDataTable cln = ((comandaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new comandaDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnempresa = base.Columns["empresa"];
                this.columnrua = base.Columns["rua"];
                this.columntelefone = base.Columns["telefone"];
                this.columntitulo = base.Columns["titulo"];
                this.columnmensagem = base.Columns["mensagem"];
                this.columncidade = base.Columns["cidade"];
                this.columnprognome = base.Columns["prognome"];
                this.columnprogtelefone = base.Columns["progtelefone"];
                this.columncod_comanda = base.Columns["cod_comanda"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnempresa = new System.Data.DataColumn("empresa", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnempresa);
                this.columnrua = new System.Data.DataColumn("rua", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrua);
                this.columntelefone = new System.Data.DataColumn("telefone", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntelefone);
                this.columntitulo = new System.Data.DataColumn("titulo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntitulo);
                this.columnmensagem = new System.Data.DataColumn("mensagem", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmensagem);
                this.columncidade = new System.Data.DataColumn("cidade", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncidade);
                this.columnprognome = new System.Data.DataColumn("prognome", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnprognome);
                this.columnprogtelefone = new System.Data.DataColumn("progtelefone", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnprogtelefone);
                this.columncod_comanda = new System.Data.DataColumn("cod_comanda", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_comanda);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncod_comanda}, true));
                this.columnempresa.AllowDBNull = false;
                this.columnrua.AllowDBNull = false;
                this.columntelefone.AllowDBNull = false;
                this.columntitulo.AllowDBNull = false;
                this.columnmensagem.AllowDBNull = false;
                this.columncidade.AllowDBNull = false;
                this.columnprognome.AllowDBNull = false;
                this.columnprogtelefone.AllowDBNull = false;
                this.columncod_comanda.AllowDBNull = false;
                this.columncod_comanda.Unique = true;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select * from public.comanda", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"comanda\" (\"empresa\", \"rua\", \"telefone\", \"titulo\", \"mensagem" +
                        "\", \"cidade\", \"prognome\", \"progtelefone\", \"cod_comanda\") VALUES (:empresa, :rua, " +
                        ":telefone, :titulo, :mensagem, :cidade, :prognome, :progtelefone, :cod_comanda)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "empresa";
                param.Size = 0;
                param.SourceColumn = "empresa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "rua";
                param.Size = 0;
                param.SourceColumn = "rua";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "telefone";
                param.Size = 0;
                param.SourceColumn = "telefone";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "titulo";
                param.Size = 0;
                param.SourceColumn = "titulo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "mensagem";
                param.Size = 0;
                param.SourceColumn = "mensagem";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cidade";
                param.Size = 0;
                param.SourceColumn = "cidade";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "prognome";
                param.Size = 0;
                param.SourceColumn = "prognome";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "progtelefone";
                param.Size = 0;
                param.SourceColumn = "progtelefone";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_comanda";
                param.Size = 0;
                param.SourceColumn = "cod_comanda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand(@"UPDATE ""public"".""comanda"" SET ""empresa"" = :empresa, ""rua"" = :rua, ""telefone"" = :telefone, ""titulo"" = :titulo, ""mensagem"" = :mensagem, ""cidade"" = :cidade, ""prognome"" = :prognome, ""progtelefone"" = :progtelefone, ""cod_comanda"" = :cod_comanda WHERE ((""empresa"" = :Original_empresa) AND (""rua"" = :Original_rua) AND (""telefone"" = :Original_telefone) AND (""titulo"" = :Original_titulo) AND (""mensagem"" = :Original_mensagem) AND (""cidade"" = :Original_cidade) AND (""prognome"" = :Original_prognome) AND (""progtelefone"" = :Original_progtelefone) AND (""cod_comanda"" = :Original_cod_comanda))", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "empresa";
                param.Size = 0;
                param.SourceColumn = "empresa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "rua";
                param.Size = 0;
                param.SourceColumn = "rua";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "telefone";
                param.Size = 0;
                param.SourceColumn = "telefone";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "titulo";
                param.Size = 0;
                param.SourceColumn = "titulo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "mensagem";
                param.Size = 0;
                param.SourceColumn = "mensagem";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cidade";
                param.Size = 0;
                param.SourceColumn = "cidade";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "prognome";
                param.Size = 0;
                param.SourceColumn = "prognome";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "progtelefone";
                param.Size = 0;
                param.SourceColumn = "progtelefone";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_comanda";
                param.Size = 0;
                param.SourceColumn = "cod_comanda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_empresa";
                param.Size = 0;
                param.SourceColumn = "empresa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_rua";
                param.Size = 0;
                param.SourceColumn = "rua";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_telefone";
                param.Size = 0;
                param.SourceColumn = "telefone";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_titulo";
                param.Size = 0;
                param.SourceColumn = "titulo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_mensagem";
                param.Size = 0;
                param.SourceColumn = "mensagem";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cidade";
                param.Size = 0;
                param.SourceColumn = "cidade";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_prognome";
                param.Size = 0;
                param.SourceColumn = "prognome";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_progtelefone";
                param.Size = 0;
                param.SourceColumn = "progtelefone";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_comanda";
                param.Size = 0;
                param.SourceColumn = "cod_comanda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand(@"DELETE FROM ""public"".""comanda"" WHERE ((""empresa"" = :Original_empresa) AND (""rua"" = :Original_rua) AND (""telefone"" = :Original_telefone) AND (""titulo"" = :Original_titulo) AND (""mensagem"" = :Original_mensagem) AND (""cidade"" = :Original_cidade) AND (""prognome"" = :Original_prognome) AND (""progtelefone"" = :Original_progtelefone) AND (""cod_comanda"" = :Original_cod_comanda))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_empresa";
                param.Size = 0;
                param.SourceColumn = "empresa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_rua";
                param.Size = 0;
                param.SourceColumn = "rua";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_telefone";
                param.Size = 0;
                param.SourceColumn = "telefone";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_titulo";
                param.Size = 0;
                param.SourceColumn = "titulo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_mensagem";
                param.Size = 0;
                param.SourceColumn = "mensagem";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cidade";
                param.Size = 0;
                param.SourceColumn = "cidade";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_prognome";
                param.Size = 0;
                param.SourceColumn = "prognome";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_progtelefone";
                param.Size = 0;
                param.SourceColumn = "progtelefone";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_comanda";
                param.Size = 0;
                param.SourceColumn = "cod_comanda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "comanda";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("empresa", "empresa");
                this.TableMapping.ColumnMappings.Add("rua", "rua");
                this.TableMapping.ColumnMappings.Add("telefone", "telefone");
                this.TableMapping.ColumnMappings.Add("titulo", "titulo");
                this.TableMapping.ColumnMappings.Add("mensagem", "mensagem");
                this.TableMapping.ColumnMappings.Add("cidade", "cidade");
                this.TableMapping.ColumnMappings.Add("prognome", "prognome");
                this.TableMapping.ColumnMappings.Add("progtelefone", "progtelefone");
                this.TableMapping.ColumnMappings.Add("cod_comanda", "cod_comanda");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public comandaRow NewcomandaRow() {
                return ((comandaRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new comandaRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(comandaRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.comandaRowChanged != null)) {
                    this.comandaRowChanged(this, new comandaRowChangeEvent(((comandaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.comandaRowChanging != null)) {
                    this.comandaRowChanging(this, new comandaRowChangeEvent(((comandaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.comandaRowDeleted != null)) {
                    this.comandaRowDeleted(this, new comandaRowChangeEvent(((comandaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.comandaRowDeleting != null)) {
                    this.comandaRowDeleting(this, new comandaRowChangeEvent(((comandaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovecomandaRow(comandaRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "comandaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class comandaRow : System.Data.DataRow {
            
            private comandaDataTable tablecomanda;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal comandaRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecomanda = ((comandaDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string empresa {
                get {
                    return ((string)(this[this.tablecomanda.empresaColumn]));
                }
                set {
                    this[this.tablecomanda.empresaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rua {
                get {
                    return ((string)(this[this.tablecomanda.ruaColumn]));
                }
                set {
                    this[this.tablecomanda.ruaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string telefone {
                get {
                    return ((string)(this[this.tablecomanda.telefoneColumn]));
                }
                set {
                    this[this.tablecomanda.telefoneColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string titulo {
                get {
                    return ((string)(this[this.tablecomanda.tituloColumn]));
                }
                set {
                    this[this.tablecomanda.tituloColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mensagem {
                get {
                    return ((string)(this[this.tablecomanda.mensagemColumn]));
                }
                set {
                    this[this.tablecomanda.mensagemColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cidade {
                get {
                    return ((string)(this[this.tablecomanda.cidadeColumn]));
                }
                set {
                    this[this.tablecomanda.cidadeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string prognome {
                get {
                    return ((string)(this[this.tablecomanda.prognomeColumn]));
                }
                set {
                    this[this.tablecomanda.prognomeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string progtelefone {
                get {
                    return ((string)(this[this.tablecomanda.progtelefoneColumn]));
                }
                set {
                    this[this.tablecomanda.progtelefoneColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_comanda {
                get {
                    return ((int)(this[this.tablecomanda.cod_comandaColumn]));
                }
                set {
                    this[this.tablecomanda.cod_comandaColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class comandaRowChangeEvent : System.EventArgs {
            
            private comandaRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public comandaRowChangeEvent(comandaRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public comandaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class garconDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnnome;
            
            private System.Data.DataColumn columnativo;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public garconDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public garconDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "garcon";
                this.Name = "garcon";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal garconDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected garconDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn nomeColumn {
                get {
                    return this.columnnome;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn ativoColumn {
                get {
                    return this.columnativo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public garconRow this[int index] {
                get {
                    return ((garconRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event garconRowChangeEventHandler garconRowChanging;
            
            public event garconRowChangeEventHandler garconRowChanged;
            
            public event garconRowChangeEventHandler garconRowDeleting;
            
            public event garconRowChangeEventHandler garconRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddgarconRow(garconRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public garconRow AddgarconRow(string nome, bool ativo) {
                garconRow rowgarconRow = ((garconRow)(this.NewRow()));
                rowgarconRow.ItemArray = new object[] {
                        nome,
                        ativo};
                this.Rows.Add(rowgarconRow);
                return rowgarconRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                garconDataTable cln = ((garconDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new garconDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnome = base.Columns["nome"];
                this.columnativo = base.Columns["ativo"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnome = new System.Data.DataColumn("nome", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnome);
                this.columnativo = new System.Data.DataColumn("ativo", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnativo);
                this.columnnome.AllowDBNull = false;
                this.columnativo.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select nome, ativo from public.garcon", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"garcon\" (\"nome\", \"ativo\") VALUES (:nome, :ativo)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "nome";
                param.Size = 0;
                param.SourceColumn = "nome";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand("UPDATE \"public\".\"garcon\" SET \"nome\" = :nome, \"ativo\" = :ativo WHERE ((\"nome\" = :O" +
                        "riginal_nome) AND (\"ativo\" = :Original_ativo))", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "nome";
                param.Size = 0;
                param.SourceColumn = "nome";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_nome";
                param.Size = 0;
                param.SourceColumn = "nome";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand("DELETE FROM \"public\".\"garcon\" WHERE ((\"nome\" = :Original_nome) AND (\"ativo\" = :Or" +
                        "iginal_ativo))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_nome";
                param.Size = 0;
                param.SourceColumn = "nome";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "garcon";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("nome", "nome");
                this.TableMapping.ColumnMappings.Add("ativo", "ativo");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public garconRow NewgarconRow() {
                return ((garconRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new garconRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(garconRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.garconRowChanged != null)) {
                    this.garconRowChanged(this, new garconRowChangeEvent(((garconRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.garconRowChanging != null)) {
                    this.garconRowChanging(this, new garconRowChangeEvent(((garconRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.garconRowDeleted != null)) {
                    this.garconRowDeleted(this, new garconRowChangeEvent(((garconRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.garconRowDeleting != null)) {
                    this.garconRowDeleting(this, new garconRowChangeEvent(((garconRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovegarconRow(garconRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "garconDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class garconRow : System.Data.DataRow {
            
            private garconDataTable tablegarcon;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal garconRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablegarcon = ((garconDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nome {
                get {
                    return ((string)(this[this.tablegarcon.nomeColumn]));
                }
                set {
                    this[this.tablegarcon.nomeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ativo {
                get {
                    return ((bool)(this[this.tablegarcon.ativoColumn]));
                }
                set {
                    this[this.tablegarcon.ativoColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class garconRowChangeEvent : System.EventArgs {
            
            private garconRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public garconRowChangeEvent(garconRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public garconRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class garconcompletoDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncod_garcon;
            
            private System.Data.DataColumn columncod_completo;
            
            private System.Data.DataColumn columnhorario;
            
            private System.Data.DataColumn columnquantidade;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public garconcompletoDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public garconcompletoDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "garconcompleto";
                this.Name = "garconcompleto";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal garconcompletoDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected garconcompletoDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_garconColumn {
                get {
                    return this.columncod_garcon;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_completoColumn {
                get {
                    return this.columncod_completo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn horarioColumn {
                get {
                    return this.columnhorario;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn quantidadeColumn {
                get {
                    return this.columnquantidade;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public garconcompletoRow this[int index] {
                get {
                    return ((garconcompletoRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event garconcompletoRowChangeEventHandler garconcompletoRowChanging;
            
            public event garconcompletoRowChangeEventHandler garconcompletoRowChanged;
            
            public event garconcompletoRowChangeEventHandler garconcompletoRowDeleting;
            
            public event garconcompletoRowChangeEventHandler garconcompletoRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddgarconcompletoRow(garconcompletoRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public garconcompletoRow AddgarconcompletoRow(int cod_garcon, int cod_completo, System.TimeSpan horario, int quantidade) {
                garconcompletoRow rowgarconcompletoRow = ((garconcompletoRow)(this.NewRow()));
                rowgarconcompletoRow.ItemArray = new object[] {
                        cod_garcon,
                        cod_completo,
                        horario,
                        quantidade};
                this.Rows.Add(rowgarconcompletoRow);
                return rowgarconcompletoRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public garconcompletoRow FindBycod_garconcod_completohorario(int cod_garcon, int cod_completo, System.TimeSpan horario) {
                return ((garconcompletoRow)(this.Rows.Find(new object[] {
                            cod_garcon,
                            cod_completo,
                            horario})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                garconcompletoDataTable cln = ((garconcompletoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new garconcompletoDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncod_garcon = base.Columns["cod_garcon"];
                this.columncod_completo = base.Columns["cod_completo"];
                this.columnhorario = base.Columns["horario"];
                this.columnquantidade = base.Columns["quantidade"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncod_garcon = new System.Data.DataColumn("cod_garcon", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_garcon);
                this.columncod_completo = new System.Data.DataColumn("cod_completo", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_completo);
                this.columnhorario = new System.Data.DataColumn("horario", typeof(System.TimeSpan), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnhorario);
                this.columnquantidade = new System.Data.DataColumn("quantidade", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantidade);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncod_garcon,
                                this.columncod_completo,
                                this.columnhorario}, true));
                this.columncod_garcon.AllowDBNull = false;
                this.columncod_completo.AllowDBNull = false;
                this.columnhorario.AllowDBNull = false;
                this.columnquantidade.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select * from public.garconcompleto", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"garconcompleto\" (\"cod_garcon\", \"cod_completo\", \"horario\", \"" +
                        "quantidade\") VALUES (:cod_garcon, :cod_completo, :horario, :quantidade)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_garcon";
                param.Size = 0;
                param.SourceColumn = "cod_garcon";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_completo";
                param.Size = 0;
                param.SourceColumn = "cod_completo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Time;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "horario";
                param.Size = 0;
                param.SourceColumn = "horario";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "quantidade";
                param.Size = 0;
                param.SourceColumn = "quantidade";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand(@"UPDATE ""public"".""garconcompleto"" SET ""cod_garcon"" = :cod_garcon, ""cod_completo"" = :cod_completo, ""horario"" = :horario, ""quantidade"" = :quantidade WHERE ((""cod_garcon"" = :Original_cod_garcon) AND (""cod_completo"" = :Original_cod_completo) AND (""horario"" = :Original_horario) AND (""quantidade"" = :Original_quantidade))", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_garcon";
                param.Size = 0;
                param.SourceColumn = "cod_garcon";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_completo";
                param.Size = 0;
                param.SourceColumn = "cod_completo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Time;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "horario";
                param.Size = 0;
                param.SourceColumn = "horario";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "quantidade";
                param.Size = 0;
                param.SourceColumn = "quantidade";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_garcon";
                param.Size = 0;
                param.SourceColumn = "cod_garcon";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_completo";
                param.Size = 0;
                param.SourceColumn = "cod_completo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Time;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_horario";
                param.Size = 0;
                param.SourceColumn = "horario";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_quantidade";
                param.Size = 0;
                param.SourceColumn = "quantidade";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand("DELETE FROM \"public\".\"garconcompleto\" WHERE ((\"cod_garcon\" = :Original_cod_garcon" +
                        ") AND (\"cod_completo\" = :Original_cod_completo) AND (\"horario\" = :Original_horar" +
                        "io) AND (\"quantidade\" = :Original_quantidade))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_garcon";
                param.Size = 0;
                param.SourceColumn = "cod_garcon";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_completo";
                param.Size = 0;
                param.SourceColumn = "cod_completo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Time;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_horario";
                param.Size = 0;
                param.SourceColumn = "horario";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_quantidade";
                param.Size = 0;
                param.SourceColumn = "quantidade";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "garconcompleto";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("cod_garcon", "cod_garcon");
                this.TableMapping.ColumnMappings.Add("cod_completo", "cod_completo");
                this.TableMapping.ColumnMappings.Add("horario", "horario");
                this.TableMapping.ColumnMappings.Add("quantidade", "quantidade");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public garconcompletoRow NewgarconcompletoRow() {
                return ((garconcompletoRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new garconcompletoRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(garconcompletoRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.garconcompletoRowChanged != null)) {
                    this.garconcompletoRowChanged(this, new garconcompletoRowChangeEvent(((garconcompletoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.garconcompletoRowChanging != null)) {
                    this.garconcompletoRowChanging(this, new garconcompletoRowChangeEvent(((garconcompletoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.garconcompletoRowDeleted != null)) {
                    this.garconcompletoRowDeleted(this, new garconcompletoRowChangeEvent(((garconcompletoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.garconcompletoRowDeleting != null)) {
                    this.garconcompletoRowDeleting(this, new garconcompletoRowChangeEvent(((garconcompletoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovegarconcompletoRow(garconcompletoRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "garconcompletoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class garconcompletoRow : System.Data.DataRow {
            
            private garconcompletoDataTable tablegarconcompleto;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal garconcompletoRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablegarconcompleto = ((garconcompletoDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_garcon {
                get {
                    return ((int)(this[this.tablegarconcompleto.cod_garconColumn]));
                }
                set {
                    this[this.tablegarconcompleto.cod_garconColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_completo {
                get {
                    return ((int)(this[this.tablegarconcompleto.cod_completoColumn]));
                }
                set {
                    this[this.tablegarconcompleto.cod_completoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.TimeSpan horario {
                get {
                    return ((System.TimeSpan)(this[this.tablegarconcompleto.horarioColumn]));
                }
                set {
                    this[this.tablegarconcompleto.horarioColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int quantidade {
                get {
                    return ((int)(this[this.tablegarconcompleto.quantidadeColumn]));
                }
                set {
                    this[this.tablegarconcompleto.quantidadeColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class garconcompletoRowChangeEvent : System.EventArgs {
            
            private garconcompletoRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public garconcompletoRowChangeEvent(garconcompletoRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public garconcompletoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ingredienteDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncod_ingrediente;
            
            private System.Data.DataColumn columndescricao;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ingredienteDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ingredienteDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "ingrediente";
                this.Name = "ingrediente";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ingredienteDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ingredienteDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_ingredienteColumn {
                get {
                    return this.columncod_ingrediente;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn descricaoColumn {
                get {
                    return this.columndescricao;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ingredienteRow this[int index] {
                get {
                    return ((ingredienteRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event ingredienteRowChangeEventHandler ingredienteRowChanging;
            
            public event ingredienteRowChangeEventHandler ingredienteRowChanged;
            
            public event ingredienteRowChangeEventHandler ingredienteRowDeleting;
            
            public event ingredienteRowChangeEventHandler ingredienteRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddingredienteRow(ingredienteRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ingredienteRow AddingredienteRow(int cod_ingrediente, string descricao) {
                ingredienteRow rowingredienteRow = ((ingredienteRow)(this.NewRow()));
                rowingredienteRow.ItemArray = new object[] {
                        cod_ingrediente,
                        descricao};
                this.Rows.Add(rowingredienteRow);
                return rowingredienteRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ingredienteRow FindBycod_ingrediente(int cod_ingrediente) {
                return ((ingredienteRow)(this.Rows.Find(new object[] {
                            cod_ingrediente})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ingredienteDataTable cln = ((ingredienteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ingredienteDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncod_ingrediente = base.Columns["cod_ingrediente"];
                this.columndescricao = base.Columns["descricao"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncod_ingrediente = new System.Data.DataColumn("cod_ingrediente", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_ingrediente);
                this.columndescricao = new System.Data.DataColumn("descricao", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndescricao);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncod_ingrediente}, true));
                this.columncod_ingrediente.AllowDBNull = false;
                this.columncod_ingrediente.Unique = true;
                this.columndescricao.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select * from public.ingrediente", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"ingrediente\" (\"cod_ingrediente\", \"descricao\") VALUES (:cod_" +
                        "ingrediente, :descricao)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_ingrediente";
                param.Size = 0;
                param.SourceColumn = "cod_ingrediente";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand("UPDATE \"public\".\"ingrediente\" SET \"cod_ingrediente\" = :cod_ingrediente, \"descrica" +
                        "o\" = :descricao WHERE ((\"cod_ingrediente\" = :Original_cod_ingrediente) AND (\"des" +
                        "cricao\" = :Original_descricao))", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_ingrediente";
                param.Size = 0;
                param.SourceColumn = "cod_ingrediente";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_ingrediente";
                param.Size = 0;
                param.SourceColumn = "cod_ingrediente";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand("DELETE FROM \"public\".\"ingrediente\" WHERE ((\"cod_ingrediente\" = :Original_cod_ingr" +
                        "ediente) AND (\"descricao\" = :Original_descricao))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_ingrediente";
                param.Size = 0;
                param.SourceColumn = "cod_ingrediente";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "ingrediente";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("cod_ingrediente", "cod_ingrediente");
                this.TableMapping.ColumnMappings.Add("descricao", "descricao");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ingredienteRow NewingredienteRow() {
                return ((ingredienteRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ingredienteRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ingredienteRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ingredienteRowChanged != null)) {
                    this.ingredienteRowChanged(this, new ingredienteRowChangeEvent(((ingredienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ingredienteRowChanging != null)) {
                    this.ingredienteRowChanging(this, new ingredienteRowChangeEvent(((ingredienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ingredienteRowDeleted != null)) {
                    this.ingredienteRowDeleted(this, new ingredienteRowChangeEvent(((ingredienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ingredienteRowDeleting != null)) {
                    this.ingredienteRowDeleting(this, new ingredienteRowChangeEvent(((ingredienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveingredienteRow(ingredienteRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ingredienteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class ingredienteRow : System.Data.DataRow {
            
            private ingredienteDataTable tableingrediente;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ingredienteRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableingrediente = ((ingredienteDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_ingrediente {
                get {
                    return ((int)(this[this.tableingrediente.cod_ingredienteColumn]));
                }
                set {
                    this[this.tableingrediente.cod_ingredienteColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descricao {
                get {
                    return ((string)(this[this.tableingrediente.descricaoColumn]));
                }
                set {
                    this[this.tableingrediente.descricaoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoingredienteRow[] GetprodutoingredienteRows() {
                return ((produtoingredienteRow[])(this.GetChildRows(this.Table.ChildRelations["fkingrediente"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class ingredienteRowChangeEvent : System.EventArgs {
            
            private ingredienteRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ingredienteRowChangeEvent(ingredienteRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ingredienteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class mesaDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncod_mesa;
            
            private System.Data.DataColumn columndescricao;
            
            private System.Data.DataColumn columncod_ambiente;
            
            private System.Data.DataColumn columnstatus;
            
            private System.Data.DataColumn columnativo;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mesaDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mesaDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "mesa";
                this.Name = "mesa";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal mesaDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected mesaDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_mesaColumn {
                get {
                    return this.columncod_mesa;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn descricaoColumn {
                get {
                    return this.columndescricao;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_ambienteColumn {
                get {
                    return this.columncod_ambiente;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn ativoColumn {
                get {
                    return this.columnativo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mesaRow this[int index] {
                get {
                    return ((mesaRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event mesaRowChangeEventHandler mesaRowChanging;
            
            public event mesaRowChangeEventHandler mesaRowChanged;
            
            public event mesaRowChangeEventHandler mesaRowDeleting;
            
            public event mesaRowChangeEventHandler mesaRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddmesaRow(mesaRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mesaRow AddmesaRow(int cod_mesa, string descricao, ambienteRow parentambienteRowByfkambiente, bool status, bool ativo) {
                mesaRow rowmesaRow = ((mesaRow)(this.NewRow()));
                rowmesaRow.ItemArray = new object[] {
                        cod_mesa,
                        descricao,
                        parentambienteRowByfkambiente[0],
                        status,
                        ativo};
                this.Rows.Add(rowmesaRow);
                return rowmesaRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mesaRow FindBycod_mesa(int cod_mesa) {
                return ((mesaRow)(this.Rows.Find(new object[] {
                            cod_mesa})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                mesaDataTable cln = ((mesaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new mesaDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncod_mesa = base.Columns["cod_mesa"];
                this.columndescricao = base.Columns["descricao"];
                this.columncod_ambiente = base.Columns["cod_ambiente"];
                this.columnstatus = base.Columns["status"];
                this.columnativo = base.Columns["ativo"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncod_mesa = new System.Data.DataColumn("cod_mesa", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_mesa);
                this.columndescricao = new System.Data.DataColumn("descricao", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndescricao);
                this.columncod_ambiente = new System.Data.DataColumn("cod_ambiente", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_ambiente);
                this.columnstatus = new System.Data.DataColumn("status", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnativo = new System.Data.DataColumn("ativo", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnativo);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncod_mesa}, true));
                this.columncod_mesa.AllowDBNull = false;
                this.columncod_mesa.Unique = true;
                this.columndescricao.AllowDBNull = false;
                this.columncod_ambiente.AllowDBNull = false;
                this.columnstatus.AllowDBNull = false;
                this.columnativo.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select * from public.mesa", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"mesa\" (\"cod_mesa\", \"descricao\", \"cod_ambiente\", \"status\", \"" +
                        "ativo\") VALUES (:cod_mesa, :descricao, :cod_ambiente, :status, :ativo)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_mesa";
                param.Size = 0;
                param.SourceColumn = "cod_mesa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_ambiente";
                param.Size = 0;
                param.SourceColumn = "cod_ambiente";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "status";
                param.Size = 0;
                param.SourceColumn = "status";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand(@"UPDATE ""public"".""mesa"" SET ""cod_mesa"" = :cod_mesa, ""descricao"" = :descricao, ""cod_ambiente"" = :cod_ambiente, ""status"" = :status, ""ativo"" = :ativo WHERE ((""cod_mesa"" = :Original_cod_mesa) AND (""descricao"" = :Original_descricao) AND (""cod_ambiente"" = :Original_cod_ambiente) AND (""status"" = :Original_status) AND (""ativo"" = :Original_ativo))", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_mesa";
                param.Size = 0;
                param.SourceColumn = "cod_mesa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_ambiente";
                param.Size = 0;
                param.SourceColumn = "cod_ambiente";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "status";
                param.Size = 0;
                param.SourceColumn = "status";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_mesa";
                param.Size = 0;
                param.SourceColumn = "cod_mesa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_ambiente";
                param.Size = 0;
                param.SourceColumn = "cod_ambiente";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_status";
                param.Size = 0;
                param.SourceColumn = "status";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand("DELETE FROM \"public\".\"mesa\" WHERE ((\"cod_mesa\" = :Original_cod_mesa) AND (\"descri" +
                        "cao\" = :Original_descricao) AND (\"cod_ambiente\" = :Original_cod_ambiente) AND (\"" +
                        "status\" = :Original_status) AND (\"ativo\" = :Original_ativo))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_mesa";
                param.Size = 0;
                param.SourceColumn = "cod_mesa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_ambiente";
                param.Size = 0;
                param.SourceColumn = "cod_ambiente";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_status";
                param.Size = 0;
                param.SourceColumn = "status";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "mesa";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("cod_mesa", "cod_mesa");
                this.TableMapping.ColumnMappings.Add("descricao", "descricao");
                this.TableMapping.ColumnMappings.Add("cod_ambiente", "cod_ambiente");
                this.TableMapping.ColumnMappings.Add("status", "status");
                this.TableMapping.ColumnMappings.Add("ativo", "ativo");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mesaRow NewmesaRow() {
                return ((mesaRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new mesaRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(mesaRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.mesaRowChanged != null)) {
                    this.mesaRowChanged(this, new mesaRowChangeEvent(((mesaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.mesaRowChanging != null)) {
                    this.mesaRowChanging(this, new mesaRowChangeEvent(((mesaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.mesaRowDeleted != null)) {
                    this.mesaRowDeleted(this, new mesaRowChangeEvent(((mesaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.mesaRowDeleting != null)) {
                    this.mesaRowDeleting(this, new mesaRowChangeEvent(((mesaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovemesaRow(mesaRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "mesaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class mesaRow : System.Data.DataRow {
            
            private mesaDataTable tablemesa;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal mesaRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemesa = ((mesaDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_mesa {
                get {
                    return ((int)(this[this.tablemesa.cod_mesaColumn]));
                }
                set {
                    this[this.tablemesa.cod_mesaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descricao {
                get {
                    return ((string)(this[this.tablemesa.descricaoColumn]));
                }
                set {
                    this[this.tablemesa.descricaoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_ambiente {
                get {
                    return ((int)(this[this.tablemesa.cod_ambienteColumn]));
                }
                set {
                    this[this.tablemesa.cod_ambienteColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool status {
                get {
                    return ((bool)(this[this.tablemesa.statusColumn]));
                }
                set {
                    this[this.tablemesa.statusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ativo {
                get {
                    return ((bool)(this[this.tablemesa.ativoColumn]));
                }
                set {
                    this[this.tablemesa.ativoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ambienteRow ambienteRow {
                get {
                    return ((ambienteRow)(this.GetParentRow(this.Table.ParentRelations["fkambiente"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fkambiente"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendamesaRow[] GetvendamesaRows() {
                return ((vendamesaRow[])(this.GetChildRows(this.Table.ChildRelations["fkmesa"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class mesaRowChangeEvent : System.EventArgs {
            
            private mesaRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mesaRowChangeEvent(mesaRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mesaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class pagamentoDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncod_pagamento;
            
            private System.Data.DataColumn columndescricao;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pagamentoDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pagamentoDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "pagamento";
                this.Name = "pagamento";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal pagamentoDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected pagamentoDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_pagamentoColumn {
                get {
                    return this.columncod_pagamento;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn descricaoColumn {
                get {
                    return this.columndescricao;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pagamentoRow this[int index] {
                get {
                    return ((pagamentoRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event pagamentoRowChangeEventHandler pagamentoRowChanging;
            
            public event pagamentoRowChangeEventHandler pagamentoRowChanged;
            
            public event pagamentoRowChangeEventHandler pagamentoRowDeleting;
            
            public event pagamentoRowChangeEventHandler pagamentoRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddpagamentoRow(pagamentoRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pagamentoRow AddpagamentoRow(int cod_pagamento, string descricao) {
                pagamentoRow rowpagamentoRow = ((pagamentoRow)(this.NewRow()));
                rowpagamentoRow.ItemArray = new object[] {
                        cod_pagamento,
                        descricao};
                this.Rows.Add(rowpagamentoRow);
                return rowpagamentoRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pagamentoRow FindBycod_pagamento(int cod_pagamento) {
                return ((pagamentoRow)(this.Rows.Find(new object[] {
                            cod_pagamento})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                pagamentoDataTable cln = ((pagamentoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new pagamentoDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncod_pagamento = base.Columns["cod_pagamento"];
                this.columndescricao = base.Columns["descricao"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncod_pagamento = new System.Data.DataColumn("cod_pagamento", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_pagamento);
                this.columndescricao = new System.Data.DataColumn("descricao", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndescricao);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncod_pagamento}, true));
                this.columncod_pagamento.AllowDBNull = false;
                this.columncod_pagamento.Unique = true;
                this.columndescricao.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select * from public.pagamento", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"pagamento\" (\"cod_pagamento\", \"descricao\") VALUES (:cod_paga" +
                        "mento, :descricao)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_pagamento";
                param.Size = 0;
                param.SourceColumn = "cod_pagamento";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand("UPDATE \"public\".\"pagamento\" SET \"cod_pagamento\" = :cod_pagamento, \"descricao\" = :" +
                        "descricao WHERE ((\"cod_pagamento\" = :Original_cod_pagamento) AND (\"descricao\" = " +
                        ":Original_descricao))", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_pagamento";
                param.Size = 0;
                param.SourceColumn = "cod_pagamento";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_pagamento";
                param.Size = 0;
                param.SourceColumn = "cod_pagamento";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand("DELETE FROM \"public\".\"pagamento\" WHERE ((\"cod_pagamento\" = :Original_cod_pagament" +
                        "o) AND (\"descricao\" = :Original_descricao))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_pagamento";
                param.Size = 0;
                param.SourceColumn = "cod_pagamento";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "pagamento";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("cod_pagamento", "cod_pagamento");
                this.TableMapping.ColumnMappings.Add("descricao", "descricao");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pagamentoRow NewpagamentoRow() {
                return ((pagamentoRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new pagamentoRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(pagamentoRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.pagamentoRowChanged != null)) {
                    this.pagamentoRowChanged(this, new pagamentoRowChangeEvent(((pagamentoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.pagamentoRowChanging != null)) {
                    this.pagamentoRowChanging(this, new pagamentoRowChangeEvent(((pagamentoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.pagamentoRowDeleted != null)) {
                    this.pagamentoRowDeleted(this, new pagamentoRowChangeEvent(((pagamentoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.pagamentoRowDeleting != null)) {
                    this.pagamentoRowDeleting(this, new pagamentoRowChangeEvent(((pagamentoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovepagamentoRow(pagamentoRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "pagamentoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class pagamentoRow : System.Data.DataRow {
            
            private pagamentoDataTable tablepagamento;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal pagamentoRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepagamento = ((pagamentoDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_pagamento {
                get {
                    return ((int)(this[this.tablepagamento.cod_pagamentoColumn]));
                }
                set {
                    this[this.tablepagamento.cod_pagamentoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descricao {
                get {
                    return ((string)(this[this.tablepagamento.descricaoColumn]));
                }
                set {
                    this[this.tablepagamento.descricaoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendaRow[] GetvendaRows() {
                return ((vendaRow[])(this.GetChildRows(this.Table.ChildRelations["fkpagamento"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class pagamentoRowChangeEvent : System.EventArgs {
            
            private pagamentoRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pagamentoRowChangeEvent(pagamentoRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pagamentoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class produtoDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncod_produto;
            
            private System.Data.DataColumn columndescricao;
            
            private System.Data.DataColumn columncod_tipo;
            
            private System.Data.DataColumn columnativo;
            
            private System.Data.DataColumn columnispizza;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "produto";
                this.Name = "produto";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal produtoDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected produtoDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_produtoColumn {
                get {
                    return this.columncod_produto;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn descricaoColumn {
                get {
                    return this.columndescricao;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_tipoColumn {
                get {
                    return this.columncod_tipo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn ativoColumn {
                get {
                    return this.columnativo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn ispizzaColumn {
                get {
                    return this.columnispizza;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoRow this[int index] {
                get {
                    return ((produtoRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event produtoRowChangeEventHandler produtoRowChanging;
            
            public event produtoRowChangeEventHandler produtoRowChanged;
            
            public event produtoRowChangeEventHandler produtoRowDeleting;
            
            public event produtoRowChangeEventHandler produtoRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddprodutoRow(produtoRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoRow AddprodutoRow(int cod_produto, string descricao, tipoRow parenttipoRowByfkcodtipo, bool ativo, bool ispizza) {
                produtoRow rowprodutoRow = ((produtoRow)(this.NewRow()));
                rowprodutoRow.ItemArray = new object[] {
                        cod_produto,
                        descricao,
                        parenttipoRowByfkcodtipo[0],
                        ativo,
                        ispizza};
                this.Rows.Add(rowprodutoRow);
                return rowprodutoRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoRow FindBycod_produto(int cod_produto) {
                return ((produtoRow)(this.Rows.Find(new object[] {
                            cod_produto})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                produtoDataTable cln = ((produtoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new produtoDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncod_produto = base.Columns["cod_produto"];
                this.columndescricao = base.Columns["descricao"];
                this.columncod_tipo = base.Columns["cod_tipo"];
                this.columnativo = base.Columns["ativo"];
                this.columnispizza = base.Columns["ispizza"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncod_produto = new System.Data.DataColumn("cod_produto", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_produto);
                this.columndescricao = new System.Data.DataColumn("descricao", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndescricao);
                this.columncod_tipo = new System.Data.DataColumn("cod_tipo", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_tipo);
                this.columnativo = new System.Data.DataColumn("ativo", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnativo);
                this.columnispizza = new System.Data.DataColumn("ispizza", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnispizza);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncod_produto}, true));
                this.columncod_produto.AllowDBNull = false;
                this.columncod_produto.Unique = true;
                this.columndescricao.AllowDBNull = false;
                this.columncod_tipo.AllowDBNull = false;
                this.columnativo.AllowDBNull = false;
                this.columnispizza.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select * from public.produto", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"produto\" (\"cod_produto\", \"descricao\", \"cod_tipo\", \"ativo\", " +
                        "\"ispizza\") VALUES (:cod_produto, :descricao, :cod_tipo, :ativo, :ispizza)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_produto";
                param.Size = 0;
                param.SourceColumn = "cod_produto";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_tipo";
                param.Size = 0;
                param.SourceColumn = "cod_tipo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ispizza";
                param.Size = 0;
                param.SourceColumn = "ispizza";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand(@"UPDATE ""public"".""produto"" SET ""cod_produto"" = :cod_produto, ""descricao"" = :descricao, ""cod_tipo"" = :cod_tipo, ""ativo"" = :ativo, ""ispizza"" = :ispizza WHERE ((""cod_produto"" = :Original_cod_produto) AND (""descricao"" = :Original_descricao) AND (""cod_tipo"" = :Original_cod_tipo) AND (""ativo"" = :Original_ativo) AND (""ispizza"" = :Original_ispizza))", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_produto";
                param.Size = 0;
                param.SourceColumn = "cod_produto";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_tipo";
                param.Size = 0;
                param.SourceColumn = "cod_tipo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ispizza";
                param.Size = 0;
                param.SourceColumn = "ispizza";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_produto";
                param.Size = 0;
                param.SourceColumn = "cod_produto";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_tipo";
                param.Size = 0;
                param.SourceColumn = "cod_tipo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ispizza";
                param.Size = 0;
                param.SourceColumn = "ispizza";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand("DELETE FROM \"public\".\"produto\" WHERE ((\"cod_produto\" = :Original_cod_produto) AND" +
                        " (\"descricao\" = :Original_descricao) AND (\"cod_tipo\" = :Original_cod_tipo) AND (" +
                        "\"ativo\" = :Original_ativo) AND (\"ispizza\" = :Original_ispizza))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_produto";
                param.Size = 0;
                param.SourceColumn = "cod_produto";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_tipo";
                param.Size = 0;
                param.SourceColumn = "cod_tipo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ispizza";
                param.Size = 0;
                param.SourceColumn = "ispizza";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "produto";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("cod_produto", "cod_produto");
                this.TableMapping.ColumnMappings.Add("descricao", "descricao");
                this.TableMapping.ColumnMappings.Add("cod_tipo", "cod_tipo");
                this.TableMapping.ColumnMappings.Add("ativo", "ativo");
                this.TableMapping.ColumnMappings.Add("ispizza", "ispizza");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoRow NewprodutoRow() {
                return ((produtoRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new produtoRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(produtoRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.produtoRowChanged != null)) {
                    this.produtoRowChanged(this, new produtoRowChangeEvent(((produtoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.produtoRowChanging != null)) {
                    this.produtoRowChanging(this, new produtoRowChangeEvent(((produtoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.produtoRowDeleted != null)) {
                    this.produtoRowDeleted(this, new produtoRowChangeEvent(((produtoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.produtoRowDeleting != null)) {
                    this.produtoRowDeleting(this, new produtoRowChangeEvent(((produtoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveprodutoRow(produtoRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "produtoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class produtoRow : System.Data.DataRow {
            
            private produtoDataTable tableproduto;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal produtoRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproduto = ((produtoDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_produto {
                get {
                    return ((int)(this[this.tableproduto.cod_produtoColumn]));
                }
                set {
                    this[this.tableproduto.cod_produtoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descricao {
                get {
                    return ((string)(this[this.tableproduto.descricaoColumn]));
                }
                set {
                    this[this.tableproduto.descricaoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_tipo {
                get {
                    return ((int)(this[this.tableproduto.cod_tipoColumn]));
                }
                set {
                    this[this.tableproduto.cod_tipoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ativo {
                get {
                    return ((bool)(this[this.tableproduto.ativoColumn]));
                }
                set {
                    this[this.tableproduto.ativoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ispizza {
                get {
                    return ((bool)(this[this.tableproduto.ispizzaColumn]));
                }
                set {
                    this[this.tableproduto.ispizzaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tipoRow tipoRow {
                get {
                    return ((tipoRow)(this.GetParentRow(this.Table.ParentRelations["fkcodtipo"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fkcodtipo"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtotamanhoRow[] GetprodutotamanhoRows() {
                return ((produtotamanhoRow[])(this.GetChildRows(this.Table.ChildRelations["fkproduto1"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoingredienteRow[] GetprodutoingredienteRows() {
                return ((produtoingredienteRow[])(this.GetChildRows(this.Table.ChildRelations["fkproduto"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class produtoRowChangeEvent : System.EventArgs {
            
            private produtoRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoRowChangeEvent(produtoRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class produtoingredienteDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncod_produto;
            
            private System.Data.DataColumn columncod_ingrediente;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoingredienteDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoingredienteDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "produtoingrediente";
                this.Name = "produtoingrediente";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal produtoingredienteDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected produtoingredienteDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_produtoColumn {
                get {
                    return this.columncod_produto;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_ingredienteColumn {
                get {
                    return this.columncod_ingrediente;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoingredienteRow this[int index] {
                get {
                    return ((produtoingredienteRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event produtoingredienteRowChangeEventHandler produtoingredienteRowChanging;
            
            public event produtoingredienteRowChangeEventHandler produtoingredienteRowChanged;
            
            public event produtoingredienteRowChangeEventHandler produtoingredienteRowDeleting;
            
            public event produtoingredienteRowChangeEventHandler produtoingredienteRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddprodutoingredienteRow(produtoingredienteRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoingredienteRow AddprodutoingredienteRow(produtoRow parentprodutoRowByfkproduto, ingredienteRow parentingredienteRowByfkingrediente) {
                produtoingredienteRow rowprodutoingredienteRow = ((produtoingredienteRow)(this.NewRow()));
                rowprodutoingredienteRow.ItemArray = new object[] {
                        parentprodutoRowByfkproduto[0],
                        parentingredienteRowByfkingrediente[0]};
                this.Rows.Add(rowprodutoingredienteRow);
                return rowprodutoingredienteRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoingredienteRow FindBycod_produtocod_ingrediente(int cod_produto, int cod_ingrediente) {
                return ((produtoingredienteRow)(this.Rows.Find(new object[] {
                            cod_produto,
                            cod_ingrediente})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                produtoingredienteDataTable cln = ((produtoingredienteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new produtoingredienteDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncod_produto = base.Columns["cod_produto"];
                this.columncod_ingrediente = base.Columns["cod_ingrediente"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncod_produto = new System.Data.DataColumn("cod_produto", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_produto);
                this.columncod_ingrediente = new System.Data.DataColumn("cod_ingrediente", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_ingrediente);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncod_produto,
                                this.columncod_ingrediente}, true));
                this.columncod_produto.AllowDBNull = false;
                this.columncod_ingrediente.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select * from public.produtoingrediente", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"produtoingrediente\" (\"cod_produto\", \"cod_ingrediente\") VALU" +
                        "ES (:cod_produto, :cod_ingrediente)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_produto";
                param.Size = 0;
                param.SourceColumn = "cod_produto";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_ingrediente";
                param.Size = 0;
                param.SourceColumn = "cod_ingrediente";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand("UPDATE \"public\".\"produtoingrediente\" SET \"cod_produto\" = :cod_produto, \"cod_ingre" +
                        "diente\" = :cod_ingrediente WHERE ((\"cod_produto\" = :Original_cod_produto) AND (\"" +
                        "cod_ingrediente\" = :Original_cod_ingrediente))", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_produto";
                param.Size = 0;
                param.SourceColumn = "cod_produto";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_ingrediente";
                param.Size = 0;
                param.SourceColumn = "cod_ingrediente";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_produto";
                param.Size = 0;
                param.SourceColumn = "cod_produto";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_ingrediente";
                param.Size = 0;
                param.SourceColumn = "cod_ingrediente";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand("DELETE FROM \"public\".\"produtoingrediente\" WHERE ((\"cod_produto\" = :Original_cod_p" +
                        "roduto) AND (\"cod_ingrediente\" = :Original_cod_ingrediente))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_produto";
                param.Size = 0;
                param.SourceColumn = "cod_produto";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_ingrediente";
                param.Size = 0;
                param.SourceColumn = "cod_ingrediente";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "produtoingrediente";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("cod_produto", "cod_produto");
                this.TableMapping.ColumnMappings.Add("cod_ingrediente", "cod_ingrediente");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoingredienteRow NewprodutoingredienteRow() {
                return ((produtoingredienteRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new produtoingredienteRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(produtoingredienteRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.produtoingredienteRowChanged != null)) {
                    this.produtoingredienteRowChanged(this, new produtoingredienteRowChangeEvent(((produtoingredienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.produtoingredienteRowChanging != null)) {
                    this.produtoingredienteRowChanging(this, new produtoingredienteRowChangeEvent(((produtoingredienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.produtoingredienteRowDeleted != null)) {
                    this.produtoingredienteRowDeleted(this, new produtoingredienteRowChangeEvent(((produtoingredienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.produtoingredienteRowDeleting != null)) {
                    this.produtoingredienteRowDeleting(this, new produtoingredienteRowChangeEvent(((produtoingredienteRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveprodutoingredienteRow(produtoingredienteRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "produtoingredienteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class produtoingredienteRow : System.Data.DataRow {
            
            private produtoingredienteDataTable tableprodutoingrediente;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal produtoingredienteRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableprodutoingrediente = ((produtoingredienteDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_produto {
                get {
                    return ((int)(this[this.tableprodutoingrediente.cod_produtoColumn]));
                }
                set {
                    this[this.tableprodutoingrediente.cod_produtoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_ingrediente {
                get {
                    return ((int)(this[this.tableprodutoingrediente.cod_ingredienteColumn]));
                }
                set {
                    this[this.tableprodutoingrediente.cod_ingredienteColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoRow produtoRow {
                get {
                    return ((produtoRow)(this.GetParentRow(this.Table.ParentRelations["fkproduto"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fkproduto"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ingredienteRow ingredienteRow {
                get {
                    return ((ingredienteRow)(this.GetParentRow(this.Table.ParentRelations["fkingrediente"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fkingrediente"]);
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class produtoingredienteRowChangeEvent : System.EventArgs {
            
            private produtoingredienteRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoingredienteRowChangeEvent(produtoingredienteRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoingredienteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class produtotamanhoDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncod_produto;
            
            private System.Data.DataColumn columncod_tamanho;
            
            private System.Data.DataColumn columnvalorproduto;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtotamanhoDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtotamanhoDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "produtotamanho";
                this.Name = "produtotamanho";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal produtotamanhoDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected produtotamanhoDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_produtoColumn {
                get {
                    return this.columncod_produto;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_tamanhoColumn {
                get {
                    return this.columncod_tamanho;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn valorprodutoColumn {
                get {
                    return this.columnvalorproduto;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtotamanhoRow this[int index] {
                get {
                    return ((produtotamanhoRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event produtotamanhoRowChangeEventHandler produtotamanhoRowChanging;
            
            public event produtotamanhoRowChangeEventHandler produtotamanhoRowChanged;
            
            public event produtotamanhoRowChangeEventHandler produtotamanhoRowDeleting;
            
            public event produtotamanhoRowChangeEventHandler produtotamanhoRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddprodutotamanhoRow(produtotamanhoRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtotamanhoRow AddprodutotamanhoRow(produtoRow parentprodutoRowByfkproduto1, tamanhoRow parenttamanhoRowByfktamanho, double valorproduto) {
                produtotamanhoRow rowprodutotamanhoRow = ((produtotamanhoRow)(this.NewRow()));
                rowprodutotamanhoRow.ItemArray = new object[] {
                        parentprodutoRowByfkproduto1[0],
                        parenttamanhoRowByfktamanho[0],
                        valorproduto};
                this.Rows.Add(rowprodutotamanhoRow);
                return rowprodutotamanhoRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtotamanhoRow FindBycod_produtocod_tamanho(int cod_produto, int cod_tamanho) {
                return ((produtotamanhoRow)(this.Rows.Find(new object[] {
                            cod_produto,
                            cod_tamanho})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                produtotamanhoDataTable cln = ((produtotamanhoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new produtotamanhoDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncod_produto = base.Columns["cod_produto"];
                this.columncod_tamanho = base.Columns["cod_tamanho"];
                this.columnvalorproduto = base.Columns["valorproduto"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncod_produto = new System.Data.DataColumn("cod_produto", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_produto);
                this.columncod_tamanho = new System.Data.DataColumn("cod_tamanho", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_tamanho);
                this.columnvalorproduto = new System.Data.DataColumn("valorproduto", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorproduto);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncod_produto,
                                this.columncod_tamanho}, true));
                this.columncod_produto.AllowDBNull = false;
                this.columncod_tamanho.AllowDBNull = false;
                this.columnvalorproduto.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select * from public.produtotamanho", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"produtotamanho\" (\"cod_produto\", \"cod_tamanho\", \"valorprodut" +
                        "o\") VALUES (:cod_produto, :cod_tamanho, :valorproduto)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_produto";
                param.Size = 0;
                param.SourceColumn = "cod_produto";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_tamanho";
                param.Size = 0;
                param.SourceColumn = "cod_tamanho";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Double;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "valorproduto";
                param.Size = 0;
                param.SourceColumn = "valorproduto";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand(@"UPDATE ""public"".""produtotamanho"" SET ""cod_produto"" = :cod_produto, ""cod_tamanho"" = :cod_tamanho, ""valorproduto"" = :valorproduto WHERE ((""cod_produto"" = :Original_cod_produto) AND (""cod_tamanho"" = :Original_cod_tamanho) AND (""valorproduto"" = :Original_valorproduto))", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_produto";
                param.Size = 0;
                param.SourceColumn = "cod_produto";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_tamanho";
                param.Size = 0;
                param.SourceColumn = "cod_tamanho";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Double;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "valorproduto";
                param.Size = 0;
                param.SourceColumn = "valorproduto";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_produto";
                param.Size = 0;
                param.SourceColumn = "cod_produto";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_tamanho";
                param.Size = 0;
                param.SourceColumn = "cod_tamanho";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Double;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_valorproduto";
                param.Size = 0;
                param.SourceColumn = "valorproduto";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand("DELETE FROM \"public\".\"produtotamanho\" WHERE ((\"cod_produto\" = :Original_cod_produ" +
                        "to) AND (\"cod_tamanho\" = :Original_cod_tamanho) AND (\"valorproduto\" = :Original_" +
                        "valorproduto))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_produto";
                param.Size = 0;
                param.SourceColumn = "cod_produto";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_tamanho";
                param.Size = 0;
                param.SourceColumn = "cod_tamanho";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Double;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_valorproduto";
                param.Size = 0;
                param.SourceColumn = "valorproduto";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "produtotamanho";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("cod_produto", "cod_produto");
                this.TableMapping.ColumnMappings.Add("cod_tamanho", "cod_tamanho");
                this.TableMapping.ColumnMappings.Add("valorproduto", "valorproduto");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtotamanhoRow NewprodutotamanhoRow() {
                return ((produtotamanhoRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new produtotamanhoRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(produtotamanhoRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.produtotamanhoRowChanged != null)) {
                    this.produtotamanhoRowChanged(this, new produtotamanhoRowChangeEvent(((produtotamanhoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.produtotamanhoRowChanging != null)) {
                    this.produtotamanhoRowChanging(this, new produtotamanhoRowChangeEvent(((produtotamanhoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.produtotamanhoRowDeleted != null)) {
                    this.produtotamanhoRowDeleted(this, new produtotamanhoRowChangeEvent(((produtotamanhoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.produtotamanhoRowDeleting != null)) {
                    this.produtotamanhoRowDeleting(this, new produtotamanhoRowChangeEvent(((produtotamanhoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveprodutotamanhoRow(produtotamanhoRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "produtotamanhoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class produtotamanhoRow : System.Data.DataRow {
            
            private produtotamanhoDataTable tableprodutotamanho;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal produtotamanhoRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableprodutotamanho = ((produtotamanhoDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_produto {
                get {
                    return ((int)(this[this.tableprodutotamanho.cod_produtoColumn]));
                }
                set {
                    this[this.tableprodutotamanho.cod_produtoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_tamanho {
                get {
                    return ((int)(this[this.tableprodutotamanho.cod_tamanhoColumn]));
                }
                set {
                    this[this.tableprodutotamanho.cod_tamanhoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double valorproduto {
                get {
                    return ((double)(this[this.tableprodutotamanho.valorprodutoColumn]));
                }
                set {
                    this[this.tableprodutotamanho.valorprodutoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tamanhoRow tamanhoRow {
                get {
                    return ((tamanhoRow)(this.GetParentRow(this.Table.ParentRelations["fktamanho"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fktamanho"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoRow produtoRow {
                get {
                    return ((produtoRow)(this.GetParentRow(this.Table.ParentRelations["fkproduto1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fkproduto1"]);
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class produtotamanhoRowChangeEvent : System.EventArgs {
            
            private produtotamanhoRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtotamanhoRowChangeEvent(produtotamanhoRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtotamanhoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class superDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncod_super;
            
            private System.Data.DataColumn columnvalor_total;
            
            private System.Data.DataColumn columnencerrada;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public superDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public superDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "super";
                this.Name = "super";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal superDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected superDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_superColumn {
                get {
                    return this.columncod_super;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn valor_totalColumn {
                get {
                    return this.columnvalor_total;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn encerradaColumn {
                get {
                    return this.columnencerrada;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public superRow this[int index] {
                get {
                    return ((superRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event superRowChangeEventHandler superRowChanging;
            
            public event superRowChangeEventHandler superRowChanged;
            
            public event superRowChangeEventHandler superRowDeleting;
            
            public event superRowChangeEventHandler superRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddsuperRow(superRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public superRow AddsuperRow(int cod_super, double valor_total, bool encerrada) {
                superRow rowsuperRow = ((superRow)(this.NewRow()));
                rowsuperRow.ItemArray = new object[] {
                        cod_super,
                        valor_total,
                        encerrada};
                this.Rows.Add(rowsuperRow);
                return rowsuperRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public superRow FindBycod_super(int cod_super) {
                return ((superRow)(this.Rows.Find(new object[] {
                            cod_super})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                superDataTable cln = ((superDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new superDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncod_super = base.Columns["cod_super"];
                this.columnvalor_total = base.Columns["valor_total"];
                this.columnencerrada = base.Columns["encerrada"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncod_super = new System.Data.DataColumn("cod_super", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_super);
                this.columnvalor_total = new System.Data.DataColumn("valor_total", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalor_total);
                this.columnencerrada = new System.Data.DataColumn("encerrada", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnencerrada);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncod_super}, true));
                this.columncod_super.AllowDBNull = false;
                this.columncod_super.Unique = true;
                this.columnvalor_total.AllowDBNull = false;
                this.columnencerrada.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select * from public.super", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"super\" (\"cod_super\", \"valor_total\", \"encerrada\") VALUES (:c" +
                        "od_super, :valor_total, :encerrada)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_super";
                param.Size = 0;
                param.SourceColumn = "cod_super";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Double;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "valor_total";
                param.Size = 0;
                param.SourceColumn = "valor_total";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "encerrada";
                param.Size = 0;
                param.SourceColumn = "encerrada";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand("UPDATE \"public\".\"super\" SET \"cod_super\" = :cod_super, \"valor_total\" = :valor_tota" +
                        "l, \"encerrada\" = :encerrada WHERE ((\"cod_super\" = :Original_cod_super) AND (\"val" +
                        "or_total\" = :Original_valor_total) AND (\"encerrada\" = :Original_encerrada))", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_super";
                param.Size = 0;
                param.SourceColumn = "cod_super";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Double;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "valor_total";
                param.Size = 0;
                param.SourceColumn = "valor_total";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "encerrada";
                param.Size = 0;
                param.SourceColumn = "encerrada";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_super";
                param.Size = 0;
                param.SourceColumn = "cod_super";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Double;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_valor_total";
                param.Size = 0;
                param.SourceColumn = "valor_total";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_encerrada";
                param.Size = 0;
                param.SourceColumn = "encerrada";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand("DELETE FROM \"public\".\"super\" WHERE ((\"cod_super\" = :Original_cod_super) AND (\"val" +
                        "or_total\" = :Original_valor_total) AND (\"encerrada\" = :Original_encerrada))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_super";
                param.Size = 0;
                param.SourceColumn = "cod_super";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Double;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_valor_total";
                param.Size = 0;
                param.SourceColumn = "valor_total";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_encerrada";
                param.Size = 0;
                param.SourceColumn = "encerrada";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "super";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("cod_super", "cod_super");
                this.TableMapping.ColumnMappings.Add("valor_total", "valor_total");
                this.TableMapping.ColumnMappings.Add("encerrada", "encerrada");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public superRow NewsuperRow() {
                return ((superRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new superRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(superRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.superRowChanged != null)) {
                    this.superRowChanged(this, new superRowChangeEvent(((superRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.superRowChanging != null)) {
                    this.superRowChanging(this, new superRowChangeEvent(((superRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.superRowDeleted != null)) {
                    this.superRowDeleted(this, new superRowChangeEvent(((superRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.superRowDeleting != null)) {
                    this.superRowDeleting(this, new superRowChangeEvent(((superRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovesuperRow(superRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "superDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class superRow : System.Data.DataRow {
            
            private superDataTable tablesuper;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal superRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesuper = ((superDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_super {
                get {
                    return ((int)(this[this.tablesuper.cod_superColumn]));
                }
                set {
                    this[this.tablesuper.cod_superColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double valor_total {
                get {
                    return ((double)(this[this.tablesuper.valor_totalColumn]));
                }
                set {
                    this[this.tablesuper.valor_totalColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool encerrada {
                get {
                    return ((bool)(this[this.tablesuper.encerradaColumn]));
                }
                set {
                    this[this.tablesuper.encerradaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supervendaRow[] GetsupervendaRows() {
                return ((supervendaRow[])(this.GetChildRows(this.Table.ChildRelations["fksuper"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class superRowChangeEvent : System.EventArgs {
            
            private superRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public superRowChangeEvent(superRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public superRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class supervendaDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncod_super;
            
            private System.Data.DataColumn columncod_venda;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supervendaDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supervendaDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "supervenda";
                this.Name = "supervenda";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal supervendaDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected supervendaDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_superColumn {
                get {
                    return this.columncod_super;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_vendaColumn {
                get {
                    return this.columncod_venda;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supervendaRow this[int index] {
                get {
                    return ((supervendaRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event supervendaRowChangeEventHandler supervendaRowChanging;
            
            public event supervendaRowChangeEventHandler supervendaRowChanged;
            
            public event supervendaRowChangeEventHandler supervendaRowDeleting;
            
            public event supervendaRowChangeEventHandler supervendaRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddsupervendaRow(supervendaRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supervendaRow AddsupervendaRow(superRow parentsuperRowByfksuper, vendaRow parentvendaRowByfkvenda) {
                supervendaRow rowsupervendaRow = ((supervendaRow)(this.NewRow()));
                rowsupervendaRow.ItemArray = new object[] {
                        parentsuperRowByfksuper[0],
                        parentvendaRowByfkvenda[0]};
                this.Rows.Add(rowsupervendaRow);
                return rowsupervendaRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supervendaRow FindBycod_supercod_venda(int cod_super, int cod_venda) {
                return ((supervendaRow)(this.Rows.Find(new object[] {
                            cod_super,
                            cod_venda})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                supervendaDataTable cln = ((supervendaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new supervendaDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncod_super = base.Columns["cod_super"];
                this.columncod_venda = base.Columns["cod_venda"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncod_super = new System.Data.DataColumn("cod_super", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_super);
                this.columncod_venda = new System.Data.DataColumn("cod_venda", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_venda);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncod_super,
                                this.columncod_venda}, true));
                this.columncod_super.AllowDBNull = false;
                this.columncod_venda.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select * from public.supervenda", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"supervenda\" (\"cod_super\", \"cod_venda\") VALUES (:cod_super, " +
                        ":cod_venda)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_super";
                param.Size = 0;
                param.SourceColumn = "cod_super";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand("UPDATE \"public\".\"supervenda\" SET \"cod_super\" = :cod_super, \"cod_venda\" = :cod_ven" +
                        "da WHERE ((\"cod_super\" = :Original_cod_super) AND (\"cod_venda\" = :Original_cod_v" +
                        "enda))", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_super";
                param.Size = 0;
                param.SourceColumn = "cod_super";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_super";
                param.Size = 0;
                param.SourceColumn = "cod_super";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand("DELETE FROM \"public\".\"supervenda\" WHERE ((\"cod_super\" = :Original_cod_super) AND " +
                        "(\"cod_venda\" = :Original_cod_venda))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_super";
                param.Size = 0;
                param.SourceColumn = "cod_super";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "supervenda";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("cod_super", "cod_super");
                this.TableMapping.ColumnMappings.Add("cod_venda", "cod_venda");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supervendaRow NewsupervendaRow() {
                return ((supervendaRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new supervendaRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(supervendaRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.supervendaRowChanged != null)) {
                    this.supervendaRowChanged(this, new supervendaRowChangeEvent(((supervendaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.supervendaRowChanging != null)) {
                    this.supervendaRowChanging(this, new supervendaRowChangeEvent(((supervendaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.supervendaRowDeleted != null)) {
                    this.supervendaRowDeleted(this, new supervendaRowChangeEvent(((supervendaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.supervendaRowDeleting != null)) {
                    this.supervendaRowDeleting(this, new supervendaRowChangeEvent(((supervendaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovesupervendaRow(supervendaRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "supervendaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class supervendaRow : System.Data.DataRow {
            
            private supervendaDataTable tablesupervenda;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal supervendaRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesupervenda = ((supervendaDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_super {
                get {
                    return ((int)(this[this.tablesupervenda.cod_superColumn]));
                }
                set {
                    this[this.tablesupervenda.cod_superColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_venda {
                get {
                    return ((int)(this[this.tablesupervenda.cod_vendaColumn]));
                }
                set {
                    this[this.tablesupervenda.cod_vendaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendaRow vendaRow {
                get {
                    return ((vendaRow)(this.GetParentRow(this.Table.ParentRelations["fkvenda"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fkvenda"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public superRow superRow {
                get {
                    return ((superRow)(this.GetParentRow(this.Table.ParentRelations["fksuper"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fksuper"]);
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class supervendaRowChangeEvent : System.EventArgs {
            
            private supervendaRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supervendaRowChangeEvent(supervendaRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supervendaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tamanhoDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncod_tamanho;
            
            private System.Data.DataColumn columndescricao;
            
            private System.Data.DataColumn columnativo;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tamanhoDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tamanhoDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "tamanho";
                this.Name = "tamanho";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tamanhoDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tamanhoDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_tamanhoColumn {
                get {
                    return this.columncod_tamanho;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn descricaoColumn {
                get {
                    return this.columndescricao;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn ativoColumn {
                get {
                    return this.columnativo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tamanhoRow this[int index] {
                get {
                    return ((tamanhoRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event tamanhoRowChangeEventHandler tamanhoRowChanging;
            
            public event tamanhoRowChangeEventHandler tamanhoRowChanged;
            
            public event tamanhoRowChangeEventHandler tamanhoRowDeleting;
            
            public event tamanhoRowChangeEventHandler tamanhoRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtamanhoRow(tamanhoRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tamanhoRow AddtamanhoRow(int cod_tamanho, string descricao, bool ativo) {
                tamanhoRow rowtamanhoRow = ((tamanhoRow)(this.NewRow()));
                rowtamanhoRow.ItemArray = new object[] {
                        cod_tamanho,
                        descricao,
                        ativo};
                this.Rows.Add(rowtamanhoRow);
                return rowtamanhoRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tamanhoRow FindBycod_tamanho(int cod_tamanho) {
                return ((tamanhoRow)(this.Rows.Find(new object[] {
                            cod_tamanho})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tamanhoDataTable cln = ((tamanhoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tamanhoDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncod_tamanho = base.Columns["cod_tamanho"];
                this.columndescricao = base.Columns["descricao"];
                this.columnativo = base.Columns["ativo"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncod_tamanho = new System.Data.DataColumn("cod_tamanho", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_tamanho);
                this.columndescricao = new System.Data.DataColumn("descricao", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndescricao);
                this.columnativo = new System.Data.DataColumn("ativo", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnativo);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncod_tamanho}, true));
                this.columncod_tamanho.AllowDBNull = false;
                this.columncod_tamanho.Unique = true;
                this.columndescricao.AllowDBNull = false;
                this.columnativo.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select * from public.tamanho", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"tamanho\" (\"cod_tamanho\", \"descricao\", \"ativo\") VALUES (:cod" +
                        "_tamanho, :descricao, :ativo)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_tamanho";
                param.Size = 0;
                param.SourceColumn = "cod_tamanho";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand("UPDATE \"public\".\"tamanho\" SET \"cod_tamanho\" = :cod_tamanho, \"descricao\" = :descri" +
                        "cao, \"ativo\" = :ativo WHERE ((\"cod_tamanho\" = :Original_cod_tamanho) AND (\"descr" +
                        "icao\" = :Original_descricao) AND (\"ativo\" = :Original_ativo))", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_tamanho";
                param.Size = 0;
                param.SourceColumn = "cod_tamanho";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_tamanho";
                param.Size = 0;
                param.SourceColumn = "cod_tamanho";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand("DELETE FROM \"public\".\"tamanho\" WHERE ((\"cod_tamanho\" = :Original_cod_tamanho) AND" +
                        " (\"descricao\" = :Original_descricao) AND (\"ativo\" = :Original_ativo))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_tamanho";
                param.Size = 0;
                param.SourceColumn = "cod_tamanho";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_descricao";
                param.Size = 0;
                param.SourceColumn = "descricao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "tamanho";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("cod_tamanho", "cod_tamanho");
                this.TableMapping.ColumnMappings.Add("descricao", "descricao");
                this.TableMapping.ColumnMappings.Add("ativo", "ativo");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tamanhoRow NewtamanhoRow() {
                return ((tamanhoRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tamanhoRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tamanhoRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tamanhoRowChanged != null)) {
                    this.tamanhoRowChanged(this, new tamanhoRowChangeEvent(((tamanhoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tamanhoRowChanging != null)) {
                    this.tamanhoRowChanging(this, new tamanhoRowChangeEvent(((tamanhoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tamanhoRowDeleted != null)) {
                    this.tamanhoRowDeleted(this, new tamanhoRowChangeEvent(((tamanhoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tamanhoRowDeleting != null)) {
                    this.tamanhoRowDeleting(this, new tamanhoRowChangeEvent(((tamanhoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetamanhoRow(tamanhoRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tamanhoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class tamanhoRow : System.Data.DataRow {
            
            private tamanhoDataTable tabletamanho;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tamanhoRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletamanho = ((tamanhoDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_tamanho {
                get {
                    return ((int)(this[this.tabletamanho.cod_tamanhoColumn]));
                }
                set {
                    this[this.tabletamanho.cod_tamanhoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descricao {
                get {
                    return ((string)(this[this.tabletamanho.descricaoColumn]));
                }
                set {
                    this[this.tabletamanho.descricaoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ativo {
                get {
                    return ((bool)(this[this.tabletamanho.ativoColumn]));
                }
                set {
                    this[this.tabletamanho.ativoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtotamanhoRow[] GetprodutotamanhoRows() {
                return ((produtotamanhoRow[])(this.GetChildRows(this.Table.ChildRelations["fktamanho"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class tamanhoRowChangeEvent : System.EventArgs {
            
            private tamanhoRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tamanhoRowChangeEvent(tamanhoRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tamanhoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tipoDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncod_tipo;
            
            private System.Data.DataColumn columnnome;
            
            private System.Data.DataColumn columnativo;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tipoDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tipoDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "tipo";
                this.Name = "tipo";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tipoDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tipoDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_tipoColumn {
                get {
                    return this.columncod_tipo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn nomeColumn {
                get {
                    return this.columnnome;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn ativoColumn {
                get {
                    return this.columnativo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tipoRow this[int index] {
                get {
                    return ((tipoRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event tipoRowChangeEventHandler tipoRowChanging;
            
            public event tipoRowChangeEventHandler tipoRowChanged;
            
            public event tipoRowChangeEventHandler tipoRowDeleting;
            
            public event tipoRowChangeEventHandler tipoRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtipoRow(tipoRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tipoRow AddtipoRow(int cod_tipo, string nome, bool ativo) {
                tipoRow rowtipoRow = ((tipoRow)(this.NewRow()));
                rowtipoRow.ItemArray = new object[] {
                        cod_tipo,
                        nome,
                        ativo};
                this.Rows.Add(rowtipoRow);
                return rowtipoRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tipoRow FindBycod_tipo(int cod_tipo) {
                return ((tipoRow)(this.Rows.Find(new object[] {
                            cod_tipo})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tipoDataTable cln = ((tipoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tipoDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncod_tipo = base.Columns["cod_tipo"];
                this.columnnome = base.Columns["nome"];
                this.columnativo = base.Columns["ativo"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncod_tipo = new System.Data.DataColumn("cod_tipo", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_tipo);
                this.columnnome = new System.Data.DataColumn("nome", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnome);
                this.columnativo = new System.Data.DataColumn("ativo", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnativo);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncod_tipo}, true));
                this.columncod_tipo.AllowDBNull = false;
                this.columncod_tipo.Unique = true;
                this.columnnome.AllowDBNull = false;
                this.columnativo.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select * from public.tipo", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"tipo\" (\"cod_tipo\", \"nome\", \"ativo\") VALUES (:cod_tipo, :nom" +
                        "e, :ativo)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_tipo";
                param.Size = 0;
                param.SourceColumn = "cod_tipo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "nome";
                param.Size = 0;
                param.SourceColumn = "nome";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand("UPDATE \"public\".\"tipo\" SET \"cod_tipo\" = :cod_tipo, \"nome\" = :nome, \"ativo\" = :ati" +
                        "vo WHERE ((\"cod_tipo\" = :Original_cod_tipo) AND (\"nome\" = :Original_nome) AND (\"" +
                        "ativo\" = :Original_ativo))", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_tipo";
                param.Size = 0;
                param.SourceColumn = "cod_tipo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "nome";
                param.Size = 0;
                param.SourceColumn = "nome";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_tipo";
                param.Size = 0;
                param.SourceColumn = "cod_tipo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_nome";
                param.Size = 0;
                param.SourceColumn = "nome";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand("DELETE FROM \"public\".\"tipo\" WHERE ((\"cod_tipo\" = :Original_cod_tipo) AND (\"nome\" " +
                        "= :Original_nome) AND (\"ativo\" = :Original_ativo))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_tipo";
                param.Size = 0;
                param.SourceColumn = "cod_tipo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.AnsiString;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_nome";
                param.Size = 0;
                param.SourceColumn = "nome";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_ativo";
                param.Size = 0;
                param.SourceColumn = "ativo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "tipo";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("cod_tipo", "cod_tipo");
                this.TableMapping.ColumnMappings.Add("nome", "nome");
                this.TableMapping.ColumnMappings.Add("ativo", "ativo");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tipoRow NewtipoRow() {
                return ((tipoRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tipoRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tipoRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tipoRowChanged != null)) {
                    this.tipoRowChanged(this, new tipoRowChangeEvent(((tipoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tipoRowChanging != null)) {
                    this.tipoRowChanging(this, new tipoRowChangeEvent(((tipoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tipoRowDeleted != null)) {
                    this.tipoRowDeleted(this, new tipoRowChangeEvent(((tipoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tipoRowDeleting != null)) {
                    this.tipoRowDeleting(this, new tipoRowChangeEvent(((tipoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetipoRow(tipoRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tipoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class tipoRow : System.Data.DataRow {
            
            private tipoDataTable tabletipo;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tipoRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletipo = ((tipoDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_tipo {
                get {
                    return ((int)(this[this.tabletipo.cod_tipoColumn]));
                }
                set {
                    this[this.tabletipo.cod_tipoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nome {
                get {
                    return ((string)(this[this.tabletipo.nomeColumn]));
                }
                set {
                    this[this.tabletipo.nomeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ativo {
                get {
                    return ((bool)(this[this.tabletipo.ativoColumn]));
                }
                set {
                    this[this.tabletipo.ativoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public produtoRow[] GetprodutoRows() {
                return ((produtoRow[])(this.GetChildRows(this.Table.ChildRelations["fkcodtipo"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class tipoRowChangeEvent : System.EventArgs {
            
            private tipoRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tipoRowChangeEvent(tipoRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tipoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vendaDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncod_venda;
            
            private System.Data.DataColumn columnvalortotal;
            
            private System.Data.DataColumn columndatavenda;
            
            private System.Data.DataColumn columnhorario;
            
            private System.Data.DataColumn columncod_caixa;
            
            private System.Data.DataColumn columnaberta;
            
            private System.Data.DataColumn columnimpressao;
            
            private System.Data.DataColumn columncod_pagamento;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendaDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendaDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "venda";
                this.Name = "venda";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vendaDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vendaDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_vendaColumn {
                get {
                    return this.columncod_venda;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn valortotalColumn {
                get {
                    return this.columnvalortotal;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn datavendaColumn {
                get {
                    return this.columndatavenda;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn horarioColumn {
                get {
                    return this.columnhorario;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_caixaColumn {
                get {
                    return this.columncod_caixa;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn abertaColumn {
                get {
                    return this.columnaberta;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn impressaoColumn {
                get {
                    return this.columnimpressao;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_pagamentoColumn {
                get {
                    return this.columncod_pagamento;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendaRow this[int index] {
                get {
                    return ((vendaRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event vendaRowChangeEventHandler vendaRowChanging;
            
            public event vendaRowChangeEventHandler vendaRowChanged;
            
            public event vendaRowChangeEventHandler vendaRowDeleting;
            
            public event vendaRowChangeEventHandler vendaRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvendaRow(vendaRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendaRow AddvendaRow(int cod_venda, double valortotal, System.DateTime datavenda, System.TimeSpan horario, caixaRow parentcaixaRowByfkcaixa, bool aberta, bool impressao, pagamentoRow parentpagamentoRowByfkpagamento) {
                vendaRow rowvendaRow = ((vendaRow)(this.NewRow()));
                rowvendaRow.ItemArray = new object[] {
                        cod_venda,
                        valortotal,
                        datavenda,
                        horario,
                        parentcaixaRowByfkcaixa[0],
                        aberta,
                        impressao,
                        parentpagamentoRowByfkpagamento[0]};
                this.Rows.Add(rowvendaRow);
                return rowvendaRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendaRow FindBycod_venda(int cod_venda) {
                return ((vendaRow)(this.Rows.Find(new object[] {
                            cod_venda})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                vendaDataTable cln = ((vendaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new vendaDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncod_venda = base.Columns["cod_venda"];
                this.columnvalortotal = base.Columns["valortotal"];
                this.columndatavenda = base.Columns["datavenda"];
                this.columnhorario = base.Columns["horario"];
                this.columncod_caixa = base.Columns["cod_caixa"];
                this.columnaberta = base.Columns["aberta"];
                this.columnimpressao = base.Columns["impressao"];
                this.columncod_pagamento = base.Columns["cod_pagamento"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncod_venda = new System.Data.DataColumn("cod_venda", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_venda);
                this.columnvalortotal = new System.Data.DataColumn("valortotal", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalortotal);
                this.columndatavenda = new System.Data.DataColumn("datavenda", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndatavenda);
                this.columnhorario = new System.Data.DataColumn("horario", typeof(System.TimeSpan), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnhorario);
                this.columncod_caixa = new System.Data.DataColumn("cod_caixa", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_caixa);
                this.columnaberta = new System.Data.DataColumn("aberta", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnaberta);
                this.columnimpressao = new System.Data.DataColumn("impressao", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnimpressao);
                this.columncod_pagamento = new System.Data.DataColumn("cod_pagamento", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_pagamento);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncod_venda}, true));
                this.columncod_venda.AllowDBNull = false;
                this.columncod_venda.Unique = true;
                this.columndatavenda.AllowDBNull = false;
                this.columnhorario.AllowDBNull = false;
                this.columncod_caixa.AllowDBNull = false;
                this.columnaberta.AllowDBNull = false;
                this.columnimpressao.AllowDBNull = false;
                this.columncod_pagamento.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select * from public.venda", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"venda\" (\"cod_venda\", \"valortotal\", \"datavenda\", \"horario\", " +
                        "\"cod_caixa\", \"aberta\", \"impressao\", \"cod_pagamento\") VALUES (:cod_venda, :valort" +
                        "otal, :datavenda, :horario, :cod_caixa, :aberta, :impressao, :cod_pagamento)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Double;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "valortotal";
                param.Size = 0;
                param.SourceColumn = "valortotal";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Date;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "datavenda";
                param.Size = 0;
                param.SourceColumn = "datavenda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Time;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "horario";
                param.Size = 0;
                param.SourceColumn = "horario";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_caixa";
                param.Size = 0;
                param.SourceColumn = "cod_caixa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "aberta";
                param.Size = 0;
                param.SourceColumn = "aberta";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "impressao";
                param.Size = 0;
                param.SourceColumn = "impressao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_pagamento";
                param.Size = 0;
                param.SourceColumn = "cod_pagamento";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand(@"UPDATE ""public"".""venda"" SET ""cod_venda"" = :cod_venda, ""valortotal"" = :valortotal, ""datavenda"" = :datavenda, ""horario"" = :horario, ""cod_caixa"" = :cod_caixa, ""aberta"" = :aberta, ""impressao"" = :impressao, ""cod_pagamento"" = :cod_pagamento WHERE ((""cod_venda"" = :Original_cod_venda) AND ((:IsNull_valortotal = 1 AND ""valortotal"" IS NULL) OR (""valortotal"" = :Original_valortotal)) AND (""datavenda"" = :Original_datavenda) AND (""horario"" = :Original_horario) AND (""cod_caixa"" = :Original_cod_caixa) AND (""aberta"" = :Original_aberta) AND (""impressao"" = :Original_impressao) AND (""cod_pagamento"" = :Original_cod_pagamento))", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Double;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "valortotal";
                param.Size = 0;
                param.SourceColumn = "valortotal";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Date;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "datavenda";
                param.Size = 0;
                param.SourceColumn = "datavenda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Time;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "horario";
                param.Size = 0;
                param.SourceColumn = "horario";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_caixa";
                param.Size = 0;
                param.SourceColumn = "cod_caixa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "aberta";
                param.Size = 0;
                param.SourceColumn = "aberta";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "impressao";
                param.Size = 0;
                param.SourceColumn = "impressao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_pagamento";
                param.Size = 0;
                param.SourceColumn = "cod_pagamento";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "IsNull_valortotal";
                param.Size = 0;
                param.SourceColumn = "valortotal";
                param.SourceColumnNullMapping = true;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Double;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_valortotal";
                param.Size = 0;
                param.SourceColumn = "valortotal";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Date;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_datavenda";
                param.Size = 0;
                param.SourceColumn = "datavenda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Time;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_horario";
                param.Size = 0;
                param.SourceColumn = "horario";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_caixa";
                param.Size = 0;
                param.SourceColumn = "cod_caixa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_aberta";
                param.Size = 0;
                param.SourceColumn = "aberta";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_impressao";
                param.Size = 0;
                param.SourceColumn = "impressao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_pagamento";
                param.Size = 0;
                param.SourceColumn = "cod_pagamento";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand(@"DELETE FROM ""public"".""venda"" WHERE ((""cod_venda"" = :Original_cod_venda) AND ((:IsNull_valortotal = 1 AND ""valortotal"" IS NULL) OR (""valortotal"" = :Original_valortotal)) AND (""datavenda"" = :Original_datavenda) AND (""horario"" = :Original_horario) AND (""cod_caixa"" = :Original_cod_caixa) AND (""aberta"" = :Original_aberta) AND (""impressao"" = :Original_impressao) AND (""cod_pagamento"" = :Original_cod_pagamento))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "IsNull_valortotal";
                param.Size = 0;
                param.SourceColumn = "valortotal";
                param.SourceColumnNullMapping = true;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Double;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_valortotal";
                param.Size = 0;
                param.SourceColumn = "valortotal";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Date;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_datavenda";
                param.Size = 0;
                param.SourceColumn = "datavenda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Time;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_horario";
                param.Size = 0;
                param.SourceColumn = "horario";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_caixa";
                param.Size = 0;
                param.SourceColumn = "cod_caixa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_aberta";
                param.Size = 0;
                param.SourceColumn = "aberta";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Boolean;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_impressao";
                param.Size = 0;
                param.SourceColumn = "impressao";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_pagamento";
                param.Size = 0;
                param.SourceColumn = "cod_pagamento";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "venda";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("cod_venda", "cod_venda");
                this.TableMapping.ColumnMappings.Add("valortotal", "valortotal");
                this.TableMapping.ColumnMappings.Add("datavenda", "datavenda");
                this.TableMapping.ColumnMappings.Add("horario", "horario");
                this.TableMapping.ColumnMappings.Add("cod_caixa", "cod_caixa");
                this.TableMapping.ColumnMappings.Add("aberta", "aberta");
                this.TableMapping.ColumnMappings.Add("impressao", "impressao");
                this.TableMapping.ColumnMappings.Add("cod_pagamento", "cod_pagamento");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendaRow NewvendaRow() {
                return ((vendaRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new vendaRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(vendaRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vendaRowChanged != null)) {
                    this.vendaRowChanged(this, new vendaRowChangeEvent(((vendaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vendaRowChanging != null)) {
                    this.vendaRowChanging(this, new vendaRowChangeEvent(((vendaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vendaRowDeleted != null)) {
                    this.vendaRowDeleted(this, new vendaRowChangeEvent(((vendaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vendaRowDeleting != null)) {
                    this.vendaRowDeleting(this, new vendaRowChangeEvent(((vendaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevendaRow(vendaRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vendaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class vendaRow : System.Data.DataRow {
            
            private vendaDataTable tablevenda;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vendaRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevenda = ((vendaDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_venda {
                get {
                    return ((int)(this[this.tablevenda.cod_vendaColumn]));
                }
                set {
                    this[this.tablevenda.cod_vendaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double valortotal {
                get {
                    try {
                        return ((double)(this[this.tablevenda.valortotalColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevenda.valortotalColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime datavenda {
                get {
                    return ((System.DateTime)(this[this.tablevenda.datavendaColumn]));
                }
                set {
                    this[this.tablevenda.datavendaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.TimeSpan horario {
                get {
                    return ((System.TimeSpan)(this[this.tablevenda.horarioColumn]));
                }
                set {
                    this[this.tablevenda.horarioColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_caixa {
                get {
                    return ((int)(this[this.tablevenda.cod_caixaColumn]));
                }
                set {
                    this[this.tablevenda.cod_caixaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool aberta {
                get {
                    return ((bool)(this[this.tablevenda.abertaColumn]));
                }
                set {
                    this[this.tablevenda.abertaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool impressao {
                get {
                    return ((bool)(this[this.tablevenda.impressaoColumn]));
                }
                set {
                    this[this.tablevenda.impressaoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_pagamento {
                get {
                    return ((int)(this[this.tablevenda.cod_pagamentoColumn]));
                }
                set {
                    this[this.tablevenda.cod_pagamentoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pagamentoRow pagamentoRow {
                get {
                    return ((pagamentoRow)(this.GetParentRow(this.Table.ParentRelations["fkpagamento"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fkpagamento"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public caixaRow caixaRow {
                get {
                    return ((caixaRow)(this.GetParentRow(this.Table.ParentRelations["fkcaixa"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fkcaixa"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalortotalNull() {
                return this.IsNull(this.tablevenda.valortotalColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalortotalNull() {
                this[this.tablevenda.valortotalColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendamesaRow[] GetvendamesaRows() {
                return ((vendamesaRow[])(this.GetChildRows(this.Table.ChildRelations["fkvenda3"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendagarconRow[] GetvendagarconRows() {
                return ((vendagarconRow[])(this.GetChildRows(this.Table.ChildRelations["fkvenda2"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendacompletaRow[] GetvendacompletaRows() {
                return ((vendacompletaRow[])(this.GetChildRows(this.Table.ChildRelations["fkvenda1"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supervendaRow[] GetsupervendaRows() {
                return ((supervendaRow[])(this.GetChildRows(this.Table.ChildRelations["fkvenda"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class vendaRowChangeEvent : System.EventArgs {
            
            private vendaRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendaRowChangeEvent(vendaRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vendacompletaDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncod_venda;
            
            private System.Data.DataColumn columncod_completo;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendacompletaDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendacompletaDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "vendacompleta";
                this.Name = "vendacompleta";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vendacompletaDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vendacompletaDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_vendaColumn {
                get {
                    return this.columncod_venda;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_completoColumn {
                get {
                    return this.columncod_completo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendacompletaRow this[int index] {
                get {
                    return ((vendacompletaRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event vendacompletaRowChangeEventHandler vendacompletaRowChanging;
            
            public event vendacompletaRowChangeEventHandler vendacompletaRowChanged;
            
            public event vendacompletaRowChangeEventHandler vendacompletaRowDeleting;
            
            public event vendacompletaRowChangeEventHandler vendacompletaRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvendacompletaRow(vendacompletaRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendacompletaRow AddvendacompletaRow(vendaRow parentvendaRowByfkvenda1, int cod_completo) {
                vendacompletaRow rowvendacompletaRow = ((vendacompletaRow)(this.NewRow()));
                rowvendacompletaRow.ItemArray = new object[] {
                        parentvendaRowByfkvenda1[0],
                        cod_completo};
                this.Rows.Add(rowvendacompletaRow);
                return rowvendacompletaRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendacompletaRow FindBycod_vendacod_completo(int cod_venda, int cod_completo) {
                return ((vendacompletaRow)(this.Rows.Find(new object[] {
                            cod_venda,
                            cod_completo})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                vendacompletaDataTable cln = ((vendacompletaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new vendacompletaDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncod_venda = base.Columns["cod_venda"];
                this.columncod_completo = base.Columns["cod_completo"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncod_venda = new System.Data.DataColumn("cod_venda", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_venda);
                this.columncod_completo = new System.Data.DataColumn("cod_completo", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_completo);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncod_venda,
                                this.columncod_completo}, true));
                this.columncod_venda.AllowDBNull = false;
                this.columncod_completo.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select * from public.vendacompleta", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"vendacompleta\" (\"cod_venda\", \"cod_completo\") VALUES (:cod_v" +
                        "enda, :cod_completo)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_completo";
                param.Size = 0;
                param.SourceColumn = "cod_completo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand("UPDATE \"public\".\"vendacompleta\" SET \"cod_venda\" = :cod_venda, \"cod_completo\" = :c" +
                        "od_completo WHERE ((\"cod_venda\" = :Original_cod_venda) AND (\"cod_completo\" = :Or" +
                        "iginal_cod_completo))", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_completo";
                param.Size = 0;
                param.SourceColumn = "cod_completo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_completo";
                param.Size = 0;
                param.SourceColumn = "cod_completo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand("DELETE FROM \"public\".\"vendacompleta\" WHERE ((\"cod_venda\" = :Original_cod_venda) A" +
                        "ND (\"cod_completo\" = :Original_cod_completo))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_completo";
                param.Size = 0;
                param.SourceColumn = "cod_completo";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "vendacompleta";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("cod_venda", "cod_venda");
                this.TableMapping.ColumnMappings.Add("cod_completo", "cod_completo");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendacompletaRow NewvendacompletaRow() {
                return ((vendacompletaRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new vendacompletaRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(vendacompletaRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vendacompletaRowChanged != null)) {
                    this.vendacompletaRowChanged(this, new vendacompletaRowChangeEvent(((vendacompletaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vendacompletaRowChanging != null)) {
                    this.vendacompletaRowChanging(this, new vendacompletaRowChangeEvent(((vendacompletaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vendacompletaRowDeleted != null)) {
                    this.vendacompletaRowDeleted(this, new vendacompletaRowChangeEvent(((vendacompletaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vendacompletaRowDeleting != null)) {
                    this.vendacompletaRowDeleting(this, new vendacompletaRowChangeEvent(((vendacompletaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevendacompletaRow(vendacompletaRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vendacompletaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class vendacompletaRow : System.Data.DataRow {
            
            private vendacompletaDataTable tablevendacompleta;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vendacompletaRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevendacompleta = ((vendacompletaDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_venda {
                get {
                    return ((int)(this[this.tablevendacompleta.cod_vendaColumn]));
                }
                set {
                    this[this.tablevendacompleta.cod_vendaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_completo {
                get {
                    return ((int)(this[this.tablevendacompleta.cod_completoColumn]));
                }
                set {
                    this[this.tablevendacompleta.cod_completoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendaRow vendaRow {
                get {
                    return ((vendaRow)(this.GetParentRow(this.Table.ParentRelations["fkvenda1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fkvenda1"]);
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class vendacompletaRowChangeEvent : System.EventArgs {
            
            private vendacompletaRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendacompletaRowChangeEvent(vendacompletaRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendacompletaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vendagarconDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncod_venda;
            
            private System.Data.DataColumn columncod_garcon;
            
            private System.Data.DataColumn columnquantidade;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendagarconDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendagarconDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "vendagarcon";
                this.Name = "vendagarcon";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vendagarconDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vendagarconDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_vendaColumn {
                get {
                    return this.columncod_venda;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_garconColumn {
                get {
                    return this.columncod_garcon;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn quantidadeColumn {
                get {
                    return this.columnquantidade;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendagarconRow this[int index] {
                get {
                    return ((vendagarconRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event vendagarconRowChangeEventHandler vendagarconRowChanging;
            
            public event vendagarconRowChangeEventHandler vendagarconRowChanged;
            
            public event vendagarconRowChangeEventHandler vendagarconRowDeleting;
            
            public event vendagarconRowChangeEventHandler vendagarconRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvendagarconRow(vendagarconRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendagarconRow AddvendagarconRow(vendaRow parentvendaRowByfkvenda2, int cod_garcon, int quantidade) {
                vendagarconRow rowvendagarconRow = ((vendagarconRow)(this.NewRow()));
                rowvendagarconRow.ItemArray = new object[] {
                        parentvendaRowByfkvenda2[0],
                        cod_garcon,
                        quantidade};
                this.Rows.Add(rowvendagarconRow);
                return rowvendagarconRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendagarconRow FindBycod_vendacod_garcon(int cod_venda, int cod_garcon) {
                return ((vendagarconRow)(this.Rows.Find(new object[] {
                            cod_venda,
                            cod_garcon})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                vendagarconDataTable cln = ((vendagarconDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new vendagarconDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncod_venda = base.Columns["cod_venda"];
                this.columncod_garcon = base.Columns["cod_garcon"];
                this.columnquantidade = base.Columns["quantidade"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncod_venda = new System.Data.DataColumn("cod_venda", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_venda);
                this.columncod_garcon = new System.Data.DataColumn("cod_garcon", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_garcon);
                this.columnquantidade = new System.Data.DataColumn("quantidade", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantidade);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncod_venda,
                                this.columncod_garcon}, true));
                this.columncod_venda.AllowDBNull = false;
                this.columncod_garcon.AllowDBNull = false;
                this.columnquantidade.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select * from public.vendagarcon", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"vendagarcon\" (\"cod_venda\", \"cod_garcon\", \"quantidade\") VALU" +
                        "ES (:cod_venda, :cod_garcon, :quantidade)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_garcon";
                param.Size = 0;
                param.SourceColumn = "cod_garcon";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "quantidade";
                param.Size = 0;
                param.SourceColumn = "quantidade";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand("UPDATE \"public\".\"vendagarcon\" SET \"cod_venda\" = :cod_venda, \"cod_garcon\" = :cod_g" +
                        "arcon, \"quantidade\" = :quantidade WHERE ((\"cod_venda\" = :Original_cod_venda) AND" +
                        " (\"cod_garcon\" = :Original_cod_garcon) AND (\"quantidade\" = :Original_quantidade)" +
                        ")", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_garcon";
                param.Size = 0;
                param.SourceColumn = "cod_garcon";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "quantidade";
                param.Size = 0;
                param.SourceColumn = "quantidade";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_garcon";
                param.Size = 0;
                param.SourceColumn = "cod_garcon";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_quantidade";
                param.Size = 0;
                param.SourceColumn = "quantidade";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand("DELETE FROM \"public\".\"vendagarcon\" WHERE ((\"cod_venda\" = :Original_cod_venda) AND" +
                        " (\"cod_garcon\" = :Original_cod_garcon) AND (\"quantidade\" = :Original_quantidade)" +
                        ")", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_garcon";
                param.Size = 0;
                param.SourceColumn = "cod_garcon";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_quantidade";
                param.Size = 0;
                param.SourceColumn = "quantidade";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "vendagarcon";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("cod_venda", "cod_venda");
                this.TableMapping.ColumnMappings.Add("cod_garcon", "cod_garcon");
                this.TableMapping.ColumnMappings.Add("quantidade", "quantidade");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendagarconRow NewvendagarconRow() {
                return ((vendagarconRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new vendagarconRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(vendagarconRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vendagarconRowChanged != null)) {
                    this.vendagarconRowChanged(this, new vendagarconRowChangeEvent(((vendagarconRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vendagarconRowChanging != null)) {
                    this.vendagarconRowChanging(this, new vendagarconRowChangeEvent(((vendagarconRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vendagarconRowDeleted != null)) {
                    this.vendagarconRowDeleted(this, new vendagarconRowChangeEvent(((vendagarconRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vendagarconRowDeleting != null)) {
                    this.vendagarconRowDeleting(this, new vendagarconRowChangeEvent(((vendagarconRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevendagarconRow(vendagarconRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vendagarconDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class vendagarconRow : System.Data.DataRow {
            
            private vendagarconDataTable tablevendagarcon;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vendagarconRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevendagarcon = ((vendagarconDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_venda {
                get {
                    return ((int)(this[this.tablevendagarcon.cod_vendaColumn]));
                }
                set {
                    this[this.tablevendagarcon.cod_vendaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_garcon {
                get {
                    return ((int)(this[this.tablevendagarcon.cod_garconColumn]));
                }
                set {
                    this[this.tablevendagarcon.cod_garconColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int quantidade {
                get {
                    return ((int)(this[this.tablevendagarcon.quantidadeColumn]));
                }
                set {
                    this[this.tablevendagarcon.quantidadeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendaRow vendaRow {
                get {
                    return ((vendaRow)(this.GetParentRow(this.Table.ParentRelations["fkvenda2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fkvenda2"]);
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class vendagarconRowChangeEvent : System.EventArgs {
            
            private vendagarconRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendagarconRowChangeEvent(vendagarconRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendagarconRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vendamesaDataTable : Devart.Data.PostgreSql.PgSqlDataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncod_venda;
            
            private System.Data.DataColumn columncod_mesa;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendamesaDataTable() : 
                    this(((Devart.Data.PostgreSql.PgSqlConnection)(null))) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendamesaDataTable(Devart.Data.PostgreSql.PgSqlConnection connection) {
                this.TableName = "vendamesa";
                this.Name = "vendamesa";
                this.Connection = connection;
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vendamesaDataTable(Devart.Data.PostgreSql.PgSqlDataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vendamesaDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_vendaColumn {
                get {
                    return this.columncod_venda;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.Browsable(false)]
            public System.Data.DataColumn cod_mesaColumn {
                get {
                    return this.columncod_mesa;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendamesaRow this[int index] {
                get {
                    return ((vendamesaRow)(this.Rows[index]));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand SelectCommand {
                get {
                    return base.SelectCommand;
                }
                set {
                    base.SelectCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand InsertCommand {
                get {
                    return base.InsertCommand;
                }
                set {
                    base.InsertCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand UpdateCommand {
                get {
                    return base.UpdateCommand;
                }
                set {
                    base.UpdateCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlCommand DeleteCommand {
                get {
                    return base.DeleteCommand;
                }
                set {
                    base.DeleteCommand = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new Devart.Data.PostgreSql.PgSqlConnection Connection {
                get {
                    return base.Connection;
                }
                set {
                    base.Connection = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new object Owner {
                get {
                    return base.Owner;
                }
                set {
                    base.Owner = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string TableName {
                get {
                    return base.TableName;
                }
                set {
                    base.TableName = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new string Name {
                get {
                    return base.Name;
                }
                set {
                    base.Name = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.DataColumnCollection Columns {
                get {
                    return base.Columns;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.ConstraintCollection Constraints {
                get {
                    return base.Constraints;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
            [System.ComponentModel.BrowsableAttribute(false)]
            [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
            public new System.Data.Common.DataTableMapping TableMapping {
                get {
                    return base.TableMapping;
                }
            }
            
            public event vendamesaRowChangeEventHandler vendamesaRowChanging;
            
            public event vendamesaRowChangeEventHandler vendamesaRowChanged;
            
            public event vendamesaRowChangeEventHandler vendamesaRowDeleting;
            
            public event vendamesaRowChangeEventHandler vendamesaRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvendamesaRow(vendamesaRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendamesaRow AddvendamesaRow(vendaRow parentvendaRowByfkvenda3, mesaRow parentmesaRowByfkmesa) {
                vendamesaRow rowvendamesaRow = ((vendamesaRow)(this.NewRow()));
                rowvendamesaRow.ItemArray = new object[] {
                        parentvendaRowByfkvenda3[0],
                        parentmesaRowByfkmesa[0]};
                this.Rows.Add(rowvendamesaRow);
                return rowvendamesaRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendamesaRow FindBycod_vendacod_mesa(int cod_venda, int cod_mesa) {
                return ((vendamesaRow)(this.Rows.Find(new object[] {
                            cod_venda,
                            cod_mesa})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                vendamesaDataTable cln = ((vendamesaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new vendamesaDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncod_venda = base.Columns["cod_venda"];
                this.columncod_mesa = base.Columns["cod_mesa"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncod_venda = new System.Data.DataColumn("cod_venda", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_venda);
                this.columncod_mesa = new System.Data.DataColumn("cod_mesa", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_mesa);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncod_venda,
                                this.columncod_mesa}, true));
                this.columncod_venda.AllowDBNull = false;
                this.columncod_mesa.AllowDBNull = false;
                if ((this.Connection == null)) {
                    this.Connection = new Devart.Data.PostgreSql.PgSqlConnection("User Id=postgres;Host=localhost;Database=Pizzaria;Schema=public;");
                }
                this.SelectCommand = new Devart.Data.PostgreSql.PgSqlCommand("select * from public.vendamesa", Connection);
                this.SelectCommand.CommandType = System.Data.CommandType.Text;
                this.InsertCommand = new Devart.Data.PostgreSql.PgSqlCommand("INSERT INTO \"public\".\"vendamesa\" (\"cod_venda\", \"cod_mesa\") VALUES (:cod_venda, :c" +
                        "od_mesa)", Connection);
                this.InsertCommand.CommandType = System.Data.CommandType.Text;
                Devart.Data.PostgreSql.PgSqlParameter param;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_mesa";
                param.Size = 0;
                param.SourceColumn = "cod_mesa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.InsertCommand.Parameters.Add(param);
                this.UpdateCommand = new Devart.Data.PostgreSql.PgSqlCommand("UPDATE \"public\".\"vendamesa\" SET \"cod_venda\" = :cod_venda, \"cod_mesa\" = :cod_mesa " +
                        "WHERE ((\"cod_venda\" = :Original_cod_venda) AND (\"cod_mesa\" = :Original_cod_mesa)" +
                        ")", Connection);
                this.UpdateCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "cod_mesa";
                param.Size = 0;
                param.SourceColumn = "cod_mesa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Current;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_mesa";
                param.Size = 0;
                param.SourceColumn = "cod_mesa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.UpdateCommand.Parameters.Add(param);
                this.DeleteCommand = new Devart.Data.PostgreSql.PgSqlCommand("DELETE FROM \"public\".\"vendamesa\" WHERE ((\"cod_venda\" = :Original_cod_venda) AND (" +
                        "\"cod_mesa\" = :Original_cod_mesa))", Connection);
                this.DeleteCommand.CommandType = System.Data.CommandType.Text;
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_venda";
                param.Size = 0;
                param.SourceColumn = "cod_venda";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                param = new Devart.Data.PostgreSql.PgSqlParameter();
                param.DbType = System.Data.DbType.Int32;
                param.Direction = System.Data.ParameterDirection.Input;
                param.IsNullable = false;
                param.ParameterName = "Original_cod_mesa";
                param.Size = 0;
                param.SourceColumn = "cod_mesa";
                param.SourceColumnNullMapping = false;
                param.SourceVersion = System.Data.DataRowVersion.Original;
                this.DeleteCommand.Parameters.Add(param);
                this.TableMapping.DataSetTable = "vendamesa";
                this.TableMapping.SourceTable = "SourceTable1";
                this.TableMapping.ColumnMappings.Add("cod_venda", "cod_venda");
                this.TableMapping.ColumnMappings.Add("cod_mesa", "cod_mesa");
                this.CachedUpdates = true;
                this.FetchAll = false;
                this.MaxRecords = 0;
                this.NonBlocking = false;
                this.QueryRecordCount = false;
                this.Quoted = false;
                this.ReturnProviderSpecificTypes = false;
                this.StartRecord = 0;
                this.UpdatingTable = "";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendamesaRow NewvendamesaRow() {
                return ((vendamesaRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new vendamesaRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(vendamesaRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vendamesaRowChanged != null)) {
                    this.vendamesaRowChanged(this, new vendamesaRowChangeEvent(((vendamesaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vendamesaRowChanging != null)) {
                    this.vendamesaRowChanging(this, new vendamesaRowChangeEvent(((vendamesaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vendamesaRowDeleted != null)) {
                    this.vendamesaRowDeleted(this, new vendamesaRowChangeEvent(((vendamesaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vendamesaRowDeleting != null)) {
                    this.vendamesaRowDeleting(this, new vendamesaRowChangeEvent(((vendamesaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevendamesaRow(vendamesaRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vendamesaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void CreateColumns() {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeSelectCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeInsertCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeUpdateCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeDeleteCommand() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConnection() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeOwner() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeName() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeColumns() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeConstraints() {
                return false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool ShouldSerializeTableMapping() {
                return false;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public partial class vendamesaRow : System.Data.DataRow {
            
            private vendamesaDataTable tablevendamesa;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vendamesaRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevendamesa = ((vendamesaDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_venda {
                get {
                    return ((int)(this[this.tablevendamesa.cod_vendaColumn]));
                }
                set {
                    this[this.tablevendamesa.cod_vendaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cod_mesa {
                get {
                    return ((int)(this[this.tablevendamesa.cod_mesaColumn]));
                }
                set {
                    this[this.tablevendamesa.cod_mesaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendaRow vendaRow {
                get {
                    return ((vendaRow)(this.GetParentRow(this.Table.ParentRelations["fkvenda3"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fkvenda3"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mesaRow mesaRow {
                get {
                    return ((mesaRow)(this.GetParentRow(this.Table.ParentRelations["fkmesa"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fkmesa"]);
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Devart.Common.DataSetGenerator.TypedDataSetGenerator", "5.0.431.0")]
        public class vendamesaRowChangeEvent : System.EventArgs {
            
            private vendamesaRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendamesaRowChangeEvent(vendamesaRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendamesaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
